Protocol: Lgcp2d  Sequence: lgcp2d.c  Apptype: solidseq1d

Description:

   A sequence to provide selective HX CP using an off-resonance
   Lee-Goldburg spinlock. This sequence arrays the contact time
   d2 so that the data can be transformed in F1. tHlg = tXlg = the
   maximum contact time.  lgcp2d can be used to provide a normal
   CP with pwHtilt = 0.0.  Use a pwHtilt = 35 degree flip angle for a
   Lee-Goldburg CP.

Setup:

   Load a calibrated data set and select the protocol Lgcp2d. For
   a new nucleus calibrate CP with Onepul and Tancpx and then select
   Lgcp2d.

   Select the desired decoupling method, TPPM or SPINAL. The manual
   file Onepul describes calibration of decoupling.

   Before running Lee-Goldburg CP use Tancpx to calibrate aHhx with
   a known field strength.  This can be done by calibrating CP with
   aH90 = aHhx and then determining pwH90.  The proton field strength
   is gB1H = 1/(4.0*pwH90). Match the Hartmann Hahn condition by varying
   aXhx as needed.  It is helpful to array aXhx and note the positions
   of the intensity maxima.

   Select the protocol Lgcp2d. Set ofHlg = gB1H/sqrt(2) and set aHlg =
   aHhx from the previous step.  Note that ofHlg = - gB1H/sqrt(2)
   is incorrect relative to the phase cycles pf pwH90 and pwHtilt.
   Set aXlg = axHX from the normal CP.

   Recalibrate the proton excitation pulse pwH90 to the value
   usually used for proton excitation if desired.

   After recalibration of pwH90 set pwHtilt = pwH90*35.3/90.0.
   Match the Hartmann Hahn condition by varying aXlg as needed.
   It is helpful to repeat the same experiment with tancpx.c
   and note the positions of the intensity maxima. You will note that
   the pattern is shifted to higher amplitude because of the offset.
   Choose one of the maxima for CP.

   Invoke par2d to make 2D parameters and set the desire sw1 and ni.
   Set tHlg = tXlg to a value greater than ni/sw1. This ensures that
   the offset .DEC pattern for H is long enough to accomodate the
   maximum t1 delay.

   Collect a 2D spectrum and note the build up.  Protonated carbons will
   build up quickly and non-protonated carbons will build up slowly.
   Sites with molecular motion will build up more slowly. Transform the
   data with wft2da('t2dc').  One will see a center spike and an outer
   splitting. The outer splitting measures the scaled CH dipolar coupling.

   Lee-Goldburg CP cross polarization can only occur through an X-H
   dipolar mechanism and X-H-H three spin CP is suppressed. A long
   contact time however can increase the importance of long range X-H
   interactions.

   Note that signal to noise of Lgcp2d is about 50% of that of Tancpx.

Parameter Groups

90H:  Module:  no
Sequence:  tancpx.c
Description:  Provides a 90-degree pulse on dec that can be used as a
              preparation pulse. Also used to store the dec calibration.
Parameters:  Channels Page
       aH90  - the amplitude of the pulse.
       pwH90 - the pulse length.
       
lgH:  Module: yes
Sequence:  lgcp2d.c
Description:  Implements cw decoupling on H with an offset, used for
              Lee-Goldburg decoupling and spinlocks.
Parameters:  Sequence Page
       aHlg - amplitude of the FSLG dec pulses.
       qHlg - FSLG cycles represented in the .DEC file.
       ofHlg - overall frequency offset.
       chHfslg = 'dec' must be set (not shown).
Implementation: MPSEQ xlg = getlg("lgH",0,0.0,0.0,0,1);
Underscore functions: _MPSEQ functions.

lgX:  Module: yes
Sequence:  lgcp2d.c
Description:  Implements cw decoupling on X with an offset, used for
              Lee-Goldburg decoupling and spinlocks.
Parameters:  Sequence Page
       aXlg - amplitude of the FSLG dec pulses.
       qXlg - FSLG cycles represented in the .DEC file.
       ofXlg - overall frequency offset.
       chXlg = 'obs' must be set (not shown).
Implementation: MPSEQ hlg = getlg("lgX",0,0.0,0.0,0,1);
Underscore functions: _MPSEQ functions.

Hseq:  Module:  yes
Sequence: tancpx.c
Description:  Chooses SPINAL or TPPM decoupling on the dec channel
              during acquisition.
Parameters: Sequence Page - the Hspinal and Htppm groups overlap.
       Hseq - chooses the decoupling sequence, TPPM or SPINAL.
Implementation:  DSEQ dec = getdseq("H");  The router implements
              getspinal() or gettppm().
Underscore functions: _dseqon(dec); runs _tppm(); or _spinal();
              _dseqoff(dec); runs decprgoff();

Hspinal: Module:  yes
Sequence:  tancpx.c
Description:  Implements SPINAL decoupling on the dec channel during
              acquisition.
Parameters: Sequence Page
       aHspinal - amplitude of the dec channel.
       pwHspinal - approximate 180-degree flip angle on resonance.
       phHspinal - +/- small angle phase. SPINAL64 is implemented with
              phases = +/- 1.0, +/- 1.5 and +/-2.0 times phHspinal.
       chHspinal = 'dec' must be set (not shown).
Implementation: SPINAL dec = getspinal("H"); or DSEQ dec =
              getdseq("H");
Underscore functions: _spinal(dec); and decprgoff(); or _dseqon(dec);
              and _dseqoff(dec);

Htppm:  Module:  yes
Sequence:  tancpx.c
Description: Implements TPPM decoupling on the dec channel during
             acquisition.
Parameters:  Sequence Page
       aHtppm - amplitude of the dec channel.
       pwHtppm - approximate 180-degree flip angle on resonance.
       phHtppm - +/- small angle phase. TPPM is implemented
             with phases = +/- 1.0 times phHtppm for alternating pulses.
       chHtppm = 'dec' must be set (not shown).
Implementation: TPPM dec = gettppm("H"); or DSEQ dec = getdseq("H");
Underscore functions: _tppmon(dec); and decprgoff(); or _dseqon(dec);
             and _dseqoff(dec);
