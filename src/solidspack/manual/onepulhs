Protocol: Onepulhs  Sequence: onepulhs.c  Apptype: solidseq1d

Description: 

   A sequence to do direct polarization with TPPM and SPINAL
   decoupling following enhancement with a hyperbolic secant 
   inversion pulse. You must select the shape name as "hsp"
   in the box of the upper right to get a hyperbolic secant. 
   Other shapes are possible. The parameter ofXshp1 applies 
   an offset to the shape relative to base frequency sfrq. 
Parameter Groups:

shp1X:  Module: yes
Sequence:  r2inv1ds.c
Description:  Implements a named shaped pulse in wavelib with 
              pBox on the obs channel. Used indivually
              or with other shapes in a simshaped pulse.
Parameters:  Sequence Page
       chXshp1 - must be 'obs'. 
       wvXshp1 - pBox pulse waveshape from wavelib.
       aXshp1 -  amplitude of pBox pulse.
       dbXshp1 - attenuator setting for pBox pulse.
       tXshp1 -  predelay for pBox pulse.
       pwXshp1 - width of pBox pulse.
       phXshp1 - starting small angle phase adjust.
       stXshp1 - shape parameter - see pBox documentation
       ofXshp1 - offset of the shaped pulse. 
Implementation:  PBOXPULSE shp1 = getpboxpulse("shp1X",0);
Underscore function: _pboxpulse(shp1,phXshp1);
Notes:  phXshp1 is the overall phase table for the shape.

90X:  Module:  no
Sequence:  onepul.c    
Description:  Provides a 90-degree pulse on obs that can be used 
              as a preparation pulse. Also used to store the obs 
              calibration.
Parameters:  Channels Page
      aX90  - the amplitude of the pulse.
      pwX90 - the pulse length.

Hseq:  Module:  yes 
Sequence:  tancpx.c      
Description:  Chooses SPINAL or TPPM decoupling on the dec channel
              during acquisition.  
Parameters:  Sequence Page - Hspinal and Htppm groups overlap. 
       Hseq - chooses the decoupling sequence, TPPM or SPINAL. 
Implementation:  DSEQ dec = getdseq("H");  The router implements 
              getspinal() or gettppm(). 
Underscore functions: _dseqon(dec); runs _tppm(); or _spinal();
              _dseqoff(dec); runs decprgoff();  

Hspinal:  Module:  yes 
Sequence:  tancpx.c  
Description:  Implements SPINAL decoupling on the dec channel during 
              acquisition.  
Parameters:  Sequence Page
       aHspinal - amplitude of the dec channel. 
       pwHspinal - approximate 180-degree flip angle on resonance. 
       phHspinal - +/- small angle phase. SPINAL64 is implemented 
              with phases = +/- 1.0, +/- 1.5 and +/-2.0 times phHspinal. 
       chHspinal = 'dec' must be set (not shown).
Implementation: SPINAL dec = getspinal("H"); or DSEQ dec = 
              getdseq("H");  
Underscore functions: _spinal(dec); and decprgoff(); or _dseqon(dec);
              and _dseqoff(dec);   

Htppm:  Module:  yes 
Sequence:  tancpx.c      
Description:  Implements TPPM decoupling on the dec channel during 
              acquisition.  
Parameters:  Sequence Page
       aHtppm - amplitude of the dec channel. 
       pwHtppm - approximate 180-degree flip angle on resonance. 
       phHtppm - +/- small angle phase. TPPM is implemented 
              with phases = +/- 1.0 times phHtppm for alternating pulses.
       chHtppm = 'dec' must be set (not shown).
Implementation: TPPM dec = gettppm("H"); or DSEQ dec = getdseq("H");
Underscore functions: _tppmon(dec); and decprgoff(); or _dseqon(dec);
              and _dseqoff(dec);

