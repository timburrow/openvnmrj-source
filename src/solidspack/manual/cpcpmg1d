Protocol: Cpcpmg1d  Sequence: cpcpmg1d.c  Apptype: solidseq1d

Description:

    "X" constant, linear or tangent CP preparation followed 
     by an echo, using CPMG acquisition, with SPINAL and TPPM decoupling. 

Parameter Groups

90H:  Module:  no
Sequence:  tancpx.c
Description:  Provides a 90-degree pulse on dec that can be used as a
              preparation pulse. Also used to store the dec calibration.
Parameters:  Channels Page
      aH90  - the amplitude of the pulse.
      pwH90 - the pulse length.

cpHX:  Module:  yes
Sequence:  tancpx.c
Description:  Implements constant, linear or tangent-ramped cross
              polarization from dec to obs.
Parameters:  Sequence Page
       shHX - 'c', constant, 'l', linear and 't', tangent shape on the
              channel designated with chHX.
       chHX - the variable-amplitude channel, 'fr' from or 'to', to.
       aHhx - median amplitude of the dec channel.
       aXhx - median amplitude of the obs channel.
       bHX - +/- tangent curvature (>0 to 1.0e5).
       dHX - amplitude width of the ramp. A negative width sets a ramp
              that starts high and decreases in amplitude.
       tHX - contact time
       ofHX - overall offset on the variable channel
       frHX = 'dec' -  channel with the initial polarization (must be
              set - not shown).
       toHX = 'obs' -  channel with the final polarization (must be set
              - not shown).
Implementation:  CP hx = getcp("HX",0.0,0.0,0,1);
Underscore function: _cp_(hx,phHhx,phXhx); phHhx is the overall phase
              table for the H channel and phXhx is that for the X channel.

echoX: Module:  no
Sequence:  ssecho1d.c
Description:  Implements a refocusing pulse with delays before and after
              the pulse.
Parameters:  Sequence Page
       aXecho - amplitude of the obs pulses.
       t1Xecho - delay before the refocusing pulse.
       pwXecho - 180-degree flip on obs.
       t2Xecho - delay after the refocusing pulse.

cpmgX: Module:  yes
Sequence:  qcpmg1d.c
Description:  Implements CPMG on obs with acquisition the windows and
              during a first echo before the CPMG.
Parameters:  Sequence Page
       aXcpmg - amplitude of obs pulses.
       pwXcpmg - nominal 180-degree flip on obs.
       r1Xcpmg - prepulse delay (similar to rof1).
       r2Xcpmg - postpulse delay (similar to rd or rof2).
       r3Xcpmg - T/R-to-rcvron delay (must equal rof3 or 2.0 us if rof3
              is not defined.
       tauXcpmg - time for one "one-tau" window and pulse.
       edXcpmg - number of 100 ns ticks in the detection window.
       chXcpmg = 'obs' must be set (not shown).
Implementation:  WMPA cpmg = getcpmg("cpmgX");
Underscore function: _cpmg(cpmg,phXcpmg);  phXcpmg is the overall phase
              table.

	      Hseq:  Module:  yes
Sequence:  tancpx.c
Description: Chooses SPINAL or TPPM decoupling on the dec channel
             during acquisition
Parameters:  Sequence Page - the Hspinal and Htppm groups overlap
       Hseq - chooses the decoupling sequence, TPPM or SPINAL.
Implementation:  DSEQ dec = getdseq("H");  The router implements
             getspinal() or gettppm().
Underscore functions: _dseqon(dec); runs _tppm(); or _spinal();_
             dseqoff(dec); runs decprgoff();

Hspinal:  Module:  yes
Sequence: tancpx.c 
Description:  Implements SPINAL decouping on the dec channel during
              acquisition.
Parameters:  Sequence Page
       aHspinal - amplitude of the dec channel.
       pwHspinal - approximate 180-degree flip angle on resonance.
       phHspinal - +/- small angle phase. SPINAL64 is implemented
              with phases = +/- 1.0, +/- 1.5 and +/-2.0 times
              phHspinal.
       chHspinal = 'dec' must be set (not shown).
Implementation: SPINAL dec = getspinal("H"); or DSEQ dec =
              getdseq("H");
Underscore functions: _spinal(dec); and decprgoff(); or
             _dseqon(dec); and _dseqoff(dec);

Htppm:  Module:  yes
Sequence:  tancpx.c
Description:  Implements TPPM decoupling on the dec channel during
              acquisition.
Parameters:  Sequence Page
       aHtppm - amplitude of the dec channel.
       pwHtppm - approximate 180-degree flip angle on resonance.
       phHtppm - +/- small angle phase. TPPM is implemented
              with phases = +/- 1.0 times phHtppm for alternating
              pulses.
       chHtppm = 'dec' must be set (not shown).
Implementation: TPPM dec = gettppm("H"); or DSEQ dec = getdseq("H");
Underscore functions: _tppmon(dec); and decprgoff(); or _dseqon(dec);
              and _dseqoff(dec);

