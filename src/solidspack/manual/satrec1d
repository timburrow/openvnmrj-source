Protocol: Satrec1d  Sequence: satrec1d.c  Apptype: solidseq1d

Description: 

A stauration recovery experiment with a delay d2 and with a 
choice of SPINAL64 or TPPM decoupling. Used for T1 measurements.  

Setup: 

Load a calibrated data set and select the protocol Satrec1d. For a new 
nucleus set the desired observe nucleus and use Onepul to obtain a 
calibration of pwX90. Select Satrec1d and set pwXsat to the duration of
the saturation pulses, aXsat for the amplitude, tXsat for the repeat time
of saturation pulses and qXsat for the number of saturation pulses
in the saturation sequence. Optionally use 'ofXsat' to set an offset
on the saturation function. 

Select the desired decoupling method, TPPM or SPINAL. The manual file 
onepul describes calibration of decoupling. 

Array d2 with a log array to measure spin lattice relaxation. Use the 
macro T1 to analyze the data. 
 
Parameter Groups: 

90X:  Module:  no
Sequence:  onepul.c    
Description:  Provides a 90-degree pulse on obs that can be used as a 
              preparation pulse. Also used to store the obs calibration.
Parameters:  Channels Page
      aX90  - the amplitude of the pulse.
      pwX90 - the pulse length.

satX: Module:  yes
Sequence:  satrec1d.c
 
Description: Provides a sequence of the saturation pulses separated by
             delays.
Parameters:  Sequence Page
     aXsat - the amplitude of the pulses.
     pwXsat - the pulse length.
     tXsat - the repeat time of pulses.
     qXsat - the number of the pulses.
     ofXsat - offset applied on the pulses.
Implementation:  MPSEQ sat= getsat("satX",0,0.0,0.0,0,1);
Underscore functions: MPSEQ Functions   
          
Hseq:  Module:  yes 
Sequence:  tancpx.c      
Description:  Chooses SPINAL or TPPM decoupling on the dec channel 
              during acquisition.
Parameters:  Sequence Page - the Hspinal and Htppm groups overlap. 
       Hseq - chooses the decoupling sequence, TPPM or SPINAL. 
Implementation:  DSEQ dec = getdseq("H");  The router implements 
              getspinal() or gettppm(). 
Underscore functions: _dseqon(dec); runs _tppm(); or _spinal();
              _dseqoff(dec); runs decprgoff();  
    
Hspinal:  Module:  yes 
Sequence: tancpx.c  
Description:  Implements SPINAL decoupling on the dec channel during 
              acquisition.  
Parameters:  Sequence Page
       aHspinal - amplitude of the dec channel. 
       pwHspinal - approximate 180-degree flip angle on resonance. 
       phHspinal - +/- small angle phase. SPINAL64 is implemented with 
              phases = +/- 1.0, +/- 1.5 and +/-2.0 times phHspinal. 
       chHspinal = 'dec' must be set (not shown).
Implementation: SPINAL dec = getspinal("H"); or DSEQ dec = 
              getdseq("H");  
Underscore functions: _spinal(dec); and decprgoff(); or _dseqon(dec); 
              and _dseqoff(dec);   

Htppm:  Module:  yes 
Sequence:  tancpx.c      
Description:  Implements TPPM decoupling on the dec channel during 
              acquisition.  
Parameters:  Sequence Page
       aHtppm - amplitude of the dec channel.
       pwHtppm - approximate 180-degree flip angle on resonance.
       phHtppm - +/- small angle phase. TPPM is implemented
              with phases = +/- 1.0 times phHtppm for alternating pulses.
       chHtppm = 'dec' must be set (not shown).
Implementation: TPPM dec = gettppm("H"); or DSEQ dec = getdseq("H"); 
Underscore functions: _tppmon(dec); and decprgoff(); or _dseqon(dec);
              and _dseqoff(dec);
