Protocol: Ineptxyrefonepul  Sequence: ineptxyrefonepul.c  Apptype: solidseq1d

Description:

   Refocussed one-pulse preparation of "Y" with INEPT transfer to "X" and 
   observe, with SPINAL or TPPM decoupling.  Separate SPINAL and TPPM decoupling
   are allowed during INEPT transfer.

Additional Software

   reset_ineptyx - Uses the value of srate to synchronize the delays t1YXinept
   and t2yxinept with the rotor. The macro is executed with the protocol. 

Parameter Groups

90Y:  Module:  no
Sequence:  none
Description:  Provides a 90-degree pulse on dec2 that can be used as a
              preparation pulse. Also used to store the dec2 calibration.
Parameters:  Channels Page
       aY90  - the amplitude of the pulse.
       pwY90 - the pulse length.

ineptYX:  Module:  yes
Sequence:  ineptxyonepul.c
Description:  Implements an INEPT polarization transfer from dec2 t
              obs.
Parameters:  Sequence Page
       aYyxinept - amplitude of the dec2 pulse.
       aXyxinept - amplitude of the obs pulse.
       pw1Yyxinept - 180-degree flip angle on the dec2 channel.
       pw1Xyxinept - 180-degree flip angle on the obs channel.
       pw2Yyxinept - 90-degree flip angle on the dec2 channel.
       pw2Xyxinept - 90-degree flip angle on the obs channel.
       t1YXinept - delay for J-evolution.
       t2YXinept - delay for J-refocusing.
       ch1YXinept = 'dec2' must be set (not shown).
       ch2YXinept = 'obs' must be set (not shown).
Implementation:  WMPA inept = getinept("ineptYX");
Underscore function: _inept(inept,ph1Yyxinept,ph1Xyxinept
              ph2Yyxinept,ph2Xyxinept); runs INEPT without refocusing.
Underscore function:_ineptref(inept,ph1Yyxinept,ph1Xyxineptph2Yyxinept
             ,ph2Xyxinept,ph3Yyxinept, ph3Xyxinept); runs INEPT with 
             refocusing. The additional arguments are the phase tables
             of the INEPT pulses as labeled.

Hmixseq:  Module: yes
Sequence:  redor1tancp.c
Description:  Chooses SPINAL or TPPM decoupling on the dec channel
              during F1 and mixing periods when Hseq is used for
              acquisition.
Parameters:  Sequence Page - the Hmixspinal and Hmixtppm groups
              overlap.  Hmixseq chooses the decoupling sequence TPPM
              or SPINAL.
Implementation:  DSEQ mix = getdseq("H"); The router implements
              getspinal() or gettppm(), as selected.
Underscore functions:  _dseqon(mix); runs _tppm(); or _spinal();
             _dseqoff(mix); runs decprgoff(mix);

Hmixspinal:  Module: yes
Sequence:  redor1tancp.c
Description:  Implements SPINAL decoupling on the dec channel during
              typical F1 and mixing periods when Hspinal is used for
              acquisition.
Parameters:  Sequence Page
       aHmixspinal - amplitude of the dec channel.
       pwHmixspinal - approximate 180-degree flip.
       phHmixspinal - +/- small angle phase. SPINAL64 is implemented
              with phases = +/- 1.0, +/- 1.5 and +/-2.0 times
              phHmixspinal.
       chHmixspinal = 'dec' must be set (not shown).
Implementation: SPINAL mix = getspinal("H"); or DSEQ mix =
             getdseq("H");
Underscore functions: _spinal(mix); and decprgoff(); or _dseqon(mix);
             and _dseqoff(mix);

Hmixtppm:  Module: yes
Sequence:  redor1tancp.c
Description:  Implements TPPM decoupling on the dec channel during
              typical F1 and mixing periods when Htppm is used for
              acquisition.
Parameters:  Sequence Page
       aHmixtppm - amplitude of the dec channel.
       pwHmixtppm - approximate 180-degree flip angle on resonance.
       phHmixtppm - +/- small angle phase. TPPM is implemented
              with phases = +/- 1.0 times phHmixtppm for alternating
              pulses.
       chHmixtppm = 'dec' must be set (not shown).
Implementation: TPPM mix = gettppm("H"); or DSEQ mix = getdseq("H");
Underscore functions: _tppm(mix); and decprgoff(); or _dseqon(mix); and
              _dseqoff(mix);

	      Hseq:  Module:  yes
Sequence:  tancpx.c
Description: Chooses SPINAL or TPPM decoupling on the dec channel
             during acquisition
Parameters:  Sequence Page - the Hspinal and Htppm groups overlap
       Hseq - chooses the decoupling sequence, TPPM or SPINAL.
Implementation:  DSEQ dec = getdseq("H");  The router implements
             getspinal() or gettppm().
Underscore functions: _dseqon(dec); runs _tppm(); or _spinal();_
             dseqoff(dec); runs decprgoff();

Hspinal:  Module:  yes
Sequence: tancpx.c 
Description:  Implements SPINAL decouping on the dec channel during
              acquisition.
Parameters:  Sequence Page
       aHspinal - amplitude of the dec channel.
       pwHspinal - approximate 180-degree flip angle on resonance.
       phHspinal - +/- small angle phase. SPINAL64 is implemented
              with phases = +/- 1.0, +/- 1.5 and +/-2.0 times
              phHspinal.
       chHspinal = 'dec' must be set (not shown).
Implementation: SPINAL dec = getspinal("H"); or DSEQ dec =
              getdseq("H");
Underscore functions: _spinal(dec); and decprgoff(); or
             _dseqon(dec); and _dseqoff(dec);

Htppm:  Module:  yes
Sequence:  tancpx.c
Description:  Implements TPPM decoupling on the dec channel during
              acquisition.
Parameters:  Sequence Page
       aHtppm - amplitude of the dec channel.
       pwHtppm - approximate 180-degree flip angle on resonance.
       phHtppm - +/- small angle phase. TPPM is implemented
              with phases = +/- 1.0 times phHtppm for alternating
              pulses.
       chHtppm = 'dec' must be set (not shown).
Implementation: TPPM dec = gettppm("H"); or DSEQ dec = getdseq("H");
Underscore functions: _tppmon(dec); and decprgoff(); or _dseqon(dec);
              and _dseqoff(dec);.

