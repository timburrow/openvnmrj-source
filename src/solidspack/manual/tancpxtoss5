Protocol: Tancpxtoss5  Sequence: tancpxtoss5.c  Apptype: solidseq1d

Description: 

Constant, linear or tangent-ramped cross polarization (CP) between 
protons and X with a choice of SPINAL64 or TPPM decoupling.  5-pulse 
TOSS side-band suppression is applied to X between the CP and 
acquisition.  Used to obtain sideband free spectra. 

Setup: 
    
Load a calibrated data set and select the protocol Tancpxtoss. For a 
new nucleus calibrate CP with Onepul and Tancpx and then select 
Tancpxtoss.  

Select the desired decoupling method, TPPM or SPINAL. The manual file 
onepul describes calibration of decoupling. 

Be sure the MAS Rate on the Acquisition page is set correctly. 

Set aXtoss = aX90 and pwXtoss = 2.0*pwX90. 

Fine calibrate aXtoss and the offset tof to minimize all sidebands. 
   
Parameter Groups: 

90H:  Module:  no
Sequence:  tancpx.c  
Description:  Provides a 90-degree pulse on dec that can be used as a 
              preparation pulse. Also used to store the dec calibration.
Parameters:  Channels Page
       aH90  - the amplitude of the pulse.
       pwH90 - the pulse length.

cpHX:  Module:  yes
Sequence:  tancpx.c
Description:  Implements constant, linear or tangent-ramped cross 
              polarization from dec to obs. 
Parameters:  Sequence Page
       shHX - 'c', constant, 'l', linear and 't', tangent shape on the 
channel designated with 
                      chHX. 
       chHX - the variable-amplitude channel, 'fr' from or 'to', to. 
       aHhx - median amplitude of the dec channel.
       aXhx - median amplitude of the obs channel.
       bHX - +/- tangent curvature (>0 to 1.0e5).  
       dHX - amplitude width of the ramp. A negative width sets a ramp 
               that starts high and decreases in amplitude.
       tHX - contact time
       ofHX - overall offset on the variable channel
       frHX = 'dec' -  channel with the initial polarization (must be 
               set - not shown).           
       toHX = 'obs' -  channel with the final polarization (must be set 
               - not shown). 
Implementation:  CP hx = getcp("HX",0.0,0.0,0,1); 
Underscore functions: _cp_(hx);  

tossX:  Module:  yes
Sequence:  tancpxtoss.c  
Description:  Implements four-pulse TOSS sideband suppression on obs. 
Parameters:  Sequence Page
       aXtoss - amplitude of the obs pulses. 
       pwXtoss - 180-degree flip on obs.
       chXtoss = 'obs' must be set (not shown).  
Implementation:  WMPA toss = gettoss5("tossX");
Underscore function: _toss5(toss,phXtoss);  phXtoss is the overall phase 
              table. 

Hseq:  Module:  yes 
Sequence:  tancpx.c      
Description:  Chooses SPINAL or TPPM decoupling on the dec channel 
              during acquisition.
Parameters:  Sequence Page - the Hspinal and Htppm groups overlap. 
       Hseq - chooses the decoupling sequence, TPPM or SPINAL. 
Implementation:  DSEQ dec = getdseq("H");  The router implements 
              getspinal() or gettppm(). 
Underscore functions: _dseqon(dec); runs _tppm(); or _spinal();
              _dseqoff(dec); runs decprgoff();  

Hspinal:  Module:  yes 
Sequence:  tancpx.c  
Description:  Implements SPINAL decoupling on the dec channel during 
              acquisition.  
Parameters:  Sequence Page
       aHspinal - amplitude of the dec channel. 
       pwHspinal - approximate 180-degree flip angle on resonance. 
       phHspinal - +/- small angle phase. SPINAL64 is implemented with 
              phases = +/- 1.0, +/- 1.5 and +/-2.0 times phHspinal. 
       chHspinal = 'dec' must be set (not shown).
Implementation: SPINAL dec = getspinal("H"); or DSEQ dec = 
              getdseq("H");  
Underscore functions: _spinal(dec); and decprgoff(); or _dseqon(dec); 
              and _dseqoff(dec);   

Htppm:  Module:  yes 
Sequence:  tancpx.c      
Description:  Implements TPPM decoupling on the dec channel during 
              acquisition.  
Parameters:  Sequence Page
       aHtppm - amplitude of the dec channel. 
       pwHtppm - approximate 180-degree flip angle on resonance. 
       phHtppm - +/- small angle phase. TPPM is implemented 
              with phases = +/- 1.0 times phHtppm for alternating pulses.  
       chHtppm = 'dec' must be set (not shown).
Implementation: TPPM dec = gettppm("H"); or DSEQ dec = getdseq("H");   
Underscore functions: _tppmon(dec); and decprgoff(); or _dseqon(dec); 
              and _dseqoff(dec);   

