Protocol: Tancpxecho  Sequence: tancpxecho.c  Apptype: solidseq1d

Description: 

Constant, linear or tangent-ramped cross polarization (CP) between 
H and X followed by a Solid echo with a choice of SPINAL64 or TPPM 
decoupling. Used for simple measurements of T2 and to avoid ring down 
in static samples. The first tau period must be synchronized with the 
rotor if this sequence is used with MAS. 

Setup: 

Load a calibrated data set and select the protocol Tancpxecho. For a 
new nucleus calibrate CP with Onepul and Tancpx and then select 
Tancpxecho.  

Select the desired decoupling method, tppm or spinal. The manual file 
onepul describes calibration of decoupling. 

Set aXecho = aX90 and pwXecho = 2.0*pwX90. Set t1Xecho and t2Xecho to 
create an echo delay.  It is helpful to set t2Xecho < t1Xecho and use 
lsfid to set the top of the echo as the first point of the fid. If 
using MAS be sure t1Xecho = n/srate where n is an integer. 

Parameter Groups: 

90H:  Module:  no
Sequence:  tancpx.c  
Description:  Provides a 90-degree pulse on dec that can be used as a 
              preparation pulse.  Also used to store the dec calibration.
Parameters:  Channels Page
       aH90  - the amplitude of the pulse.
       pwH90 - the pulse length.

cpHX:  Module:  yes
Sequence:  tancpx.c
Description:  Implements constant, linear or tangent-ramped cross 
              polarization from dec to obs. 
Parameters:  Sequence Page
       shHX - 'c', constant, 'l', linear and 't', tangent shape on the 
channel designated with 
                      chHX. 
       chHX - the variable-amplitude channel, 'fr' from or 'to', to. 
       aHhx - median amplitude of the dec channel.
       aXhx - median amplitude of the obs channel.
       bHX - +/- tangent curvature (>0 to 1.0e5).  
       dHX - amplitude width of the ramp. A negative width sets a ramp 
              that starts high and decreases in amplitude.
       tHX - contact time
       ofHX - overall offset on the variable channel
       frHX = 'dec' -  channel with the initial polarization (must be 
             set - not shown).           
       toHX = 'obs' -  channel with the final polarization (must be set 
             - not shown). 
Implementation:  CP hx = getcp("HX",0.0,0.0,0,1); 
Underscore functions: _cp_(hx,phHhx,phxhx);  

echoX: Module: no
Sequence:  ssecho1d.c
Description: Implements a refocusing pulse with delays before and after 
             the pulse.
Parameters:  Sequence Page
       aXecho - amplitude of the obs pulses.
       t1Xecho - delay before the refocusing pulse.
       pwXecho - 180-degree flip on obs.
       t2Xecho - delay after the refocusing pulse.

A Solid echo uses a 2-phase cycle 01 03. 

Hseq:  Module:  yes 
Sequence:  tancpx.c      
Description: Chooses SPINAL or TPPM decoupling on the dec channel 
             during acquisition.
Parameters:  Sequence Page - the Hspinal and Htppm groups overlap. 
       Hseq - chooses the decoupling sequence, TPPM or SPINAL. 
Implementation:  DSEQ dec = getdseq("H");  The router implements 
             getspinal() or gettppm(). 
Underscore functions: _dseqon(dec); runs _tppm(); or _spinal();
            _dseqoff(dec); runs decprgoff();  

Hspinal:  Module:  yes 
Sequence:  tancpx.c  
Description:  Implements SPINAL decoupling on the dec channel during 
              acquisition.  
Parameters:  Sequence Page
       aHspinal - amplitude of the dec channel. 
       pwHspinal - approximate 180-degree flip angle on resonance. 
       phHspinal - +/- small angle phase. SPINAL64 is implemented with 
              phases = +/- 1.0, +/- 1.5 and +/-2.0 times phHspinal. 
       chHspinal = 'dec' must be set (not shown).
Implementation: SPINAL dec = getspinal("H"); or DSEQ dec = 
              getdseq("H");  
Underscore functions: _spinal(dec); and decprgoff(); or _dseqon(dec); 
              and _dseqoff(dec);   

Htppm:  Module:  yes 
Sequence:  tancpx.c      
Description: Implements TPPM decoupling on the dec channel during 
acquisition.  
Parameters:  Sequence Page
       aHtppm - amplitude of the dec channel. 
       pwHtppm - approximate 180-degree flip angle on resonance. 
       phHtppm - +/- small angle phase. TPPM is implemented 
             with phases = +/- 1.0 times phHtppm for alternating pulses.  
       chHtppm = 'dec' must be set (not shown).
Implementation: TPPM dec = gettppm("H"); or DSEQ dec = getdseq("H");   
Underscore functions: _tppmon(dec); and decprgoff(); or _dseqon(dec); 
             and _dseqoff(dec);   
