Protocol: Hahnechodfs1d  Sequence: hahnechodfs1d.c  Apptype: solidseq1d

Description:

A two-pulse Hahn echo with with a DFS prepulse and 
a choice of SPINAL64 orTPPM decoupling. Uses a four
phase cycle on pwX180 relative to the first pulse 
and receiver.

Setup:

Load a calibrated data set and select the protocol Hahnecho1d. For a new
nucleus calibrate with Onepul and then select Hahnecho1d. 

Select the desired decoupling method, TPPM or SPINAL. The manual file
onepul describes calibration of decoupling.

Usually set aXecho = aX90 and pwXecho = 2.0*pwX90.

Set t1Xecho and t2Xecho to create an echo delay.  It is helpful to set
t2Xecho < t1Xecho and use lsfid to set the top of the echo as the first
point of the fid. If using MAS be sure t1Xecho + pwXecho/2.0 = n/srate
where n is an integer.

Calibrate the DFS pulse to obtain good signal enhancement.  The exact
values will depend upon the sample.  DFS enchancement is only obtained
for spins n/2 where n= 3,5,7 etc, so called half-integer quadrupole 
nuclei. 

For a good start set of1Xdfs to 1.5e6 and of2Xdfs = 1.0e5. The 
higher frequency is about the maximum useful limit fro a typical probe 
and the lower limit should be a value 2 to 3 times the width of the 
quadrupole central transition. 

Set aXdfs to about 10% to 20% of the hard-pulse amplitude and set pwXdfs 
to about 300 us. 

Array pwXdfs and aXdfs fro the best signal. Afterword lower of2Xdfs until 
the signal intensty no longer increases. 

Usually on can about a singal amplification factor of 1.5 to 2.5 out of 
DFS. 

Parameter Groups:

dfsX:  Module:  yes
Sequence:  onepuldfs.c
Description:  Implements a "double frequency sweep", DFS, pulse on the
              obs channel.
Parameters:  Sequence Page
       aXdfs - amplitude of obs DFS pulse.
       pwXdfs - width of the DFS pulse.
       of1Xdfs - initial frequency.
       of2Xdfs - final frequency.
       ofXdfs - center frequency.
       chXdfs = 'obs' must be set (not shown).
Implementation:  SHAPE dfs = getdfs("dfsX",0,0.0,0.0,0,1);
Underscore function: _shape(dfs, phXdfs);

90X:  Module:  no
Sequence:  onepul.c
Description:  Provides a 90-degree pulse on obs that can be used as a
              preparation pulse.  Also used to store the obs calibration.
Parameters:  Channels Page
      aX90  - the amplitude of the pulse.
      pwX90 - the pulse length.

echoX: Module: no
Sequence:  ssecho1d.c
Description: Implements a refocusing pulse with delays before and after
the pulse.
Parameters:  Sequence Page
       aXecho - amplitude of the obs pulses.
       t1Xecho - delay before the refocusing pulse.
       pwXecho - 180-degree flip on obs.
       t2Xecho - delay after the refocusing pulse.

Hseq:  Module:  yes
Sequence:  tancpx.c
Description: Chooses SPINAL or TPPM decoupling on the dec channel
             during acquisition.
Parameters:  Sequence Page - the Hspinal and Htppm groups overlap.
       Hseq - chooses the decoupling sequence, TPPM or SPINAL.
Implementation:  DSEQ dec = getdseq("H");  The router implements
             getspinal() or gettppm().
Underscore functions: _dseqon(dec); runs _tppm(); or _spinal();
             dseqoff(dec); runs decprgoff();

Hspinal:  Module:  yes
Sequence: tancpx.c
Description:  Implements SPINAL decoupling on the dec channel during 
              acquisition.
Parameters:  Sequence Page
       aHspinal - amplitude of the dec channel.
       pwHspinal - approximate 180-degree flip angle on resonance.
       phHspinal - +/- small angle phase. SPINAL64 is implemented
              with phases = +/- 1.0, +/- 1.5 and +/-2.0 times
              phHspinal.
       chHspinal = 'dec' must be set (not shown).
Implementation: SPINAL dec = getspinal("H"); or DSEQ dec =
              getdseq("H");
Underscore functions: _spinal(dec); and decprgoff(); or
             _dseqon(dec); and _dseqoff(dec);

Htppm:  Module:  yes
Sequence:  tancpx.c
Description:  Implements TPPM decoupling on the dec channel during
              acquisition.
Parameters:  Sequence Page
       aHtppm - amplitude of the dec channel.
       pwHtppm - approximate 180-degree flip angle on resonance.
       phHtppm - +/- small angle phase. TPPM is implemented
              with phases = +/- 1.0 times phHtppm for alternating
              pulses.
       chHtppm = 'dec' must be set (not shown).
Implementation: TPPM dec = gettppm("H"); or DSEQ dec = getdseq("H");
Underscore functions: _tppmon(dec); and decprgoff(); or _dseqon(dec);
              and _dseqoff(dec);
