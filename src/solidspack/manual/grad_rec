Protocol: Grad_rec  Sequence: grad_rec.c  Apptype: solidseq1d

Description: Single pulse X preparation following a gradient pulse 
             with SPINAL or TPPM decoupling during acquisition. 
             Used to measure gradient recovery with an MAS solid
             sample. 
Setup: 

Load a calibrated data set and select the protocol Grad_rec. For a 
new nucleus set the desired observe nucleus and array pwX90 to 
obtain a calibration. 

Select the desired decoupling method tppm or spinal. The manual 
file onepul describes calibration of decoupling.

Set the amplitude and time, gaZgrad and gpwZgrad for the deisred 
gradient.  Array gtZgrad over the recovery times in question. Choose 
the minimum value for which the data is not distorted. 

The maximum value of gpwZgrad is 10 ms. Adamantane is a good sample 
to use with recovery measurements.  

Parameter Groups:

90X:  Module:  no
Sequence:  onepul.c    
Description:  Provides a 90-degree pulse on obs that can be used 
              as a preparation pulse. Also used to store the obs 
              calibration.
Parameters:  Channels Page
      aX90  - the amplitude of the pulse.
      pwX90 - the pulse length.

gradZ:  Module:  no
Sequence:  grad_rec.c
Description:  Implements a gradient pulse on the Z axis followed 
              by a recovery time. 
Parameters:  Sequence Page
       gaZgrad - gradient amplitude in DAC units
       gpwZgrad - gradient pulse length
       gtZgrad - gradient recovery time. 
Implementation: Use with rgradient or zgradpulse.

Hseq:  Module:  yes 
Sequence:  tancpx.c      
Description:  Chooses SPINAL or TPPM decoupling on the dec channel
              during acquisition.  
Parameters:  Sequence Page - Hspinal and Htppm groups overlap. 
       Hseq - chooses the decoupling sequence, TPPM or SPINAL. 
Implementation:  DSEQ dec = getdseq("H");  The router implements 
              getspinal() or gettppm(). 
Underscore functions: _dseqon(dec); runs _tppm(); or _spinal();
              _dseqoff(dec); runs decprgoff();  

Hspinal:  Module:  yes 
Sequence:  tancpx.c  
Description:  Implements SPINAL decoupling on the dec channel during 
              acquisition.  
Parameters:  Sequence Page
       aHspinal - amplitude of the dec channel. 
       pwHspinal - approximate 180-degree flip angle on resonance. 
       phHspinal - +/- small angle phase. SPINAL64 is implemented 
              with phases = +/- 1.0, +/- 1.5 and +/-2.0 times phHspinal. 
       chHspinal = 'dec' must be set (not shown).
Implementation: SPINAL dec = getspinal("H"); or DSEQ dec = 
              getdseq("H");  
Underscore functions: _spinal(dec); and decprgoff(); or _dseqon(dec);
              and _dseqoff(dec);   

Htppm:  Module:  yes 
Sequence:  tancpx.c      
Description:  Implements TPPM decoupling on the dec channel during 
              acquisition.  
Parameters:  Sequence Page
       aHtppm - amplitude of the dec channel. 
       pwHtppm - approximate 180-degree flip angle on resonance. 
       phHtppm - +/- small angle phase. TPPM is implemented 
              with phases = +/- 1.0 times phHtppm for alternating pulses.
       chHtppm = 'dec' must be set (not shown).
Implementation: TPPM dec = gettppm("H"); or DSEQ dec = getdseq("H");
Underscore functions: _tppmon(dec); and decprgoff(); or _dseqon(dec);
              and _dseqoff(dec);

