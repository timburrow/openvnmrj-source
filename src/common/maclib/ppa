"macro ppa"
"********************************"
" ppa - print chemist parameters "
"********************************"
" ppa(x,y) - plot chemist parameters at position x,y "

if (procdim>0) then
   setvalue('procdim',procdim,'processed')
   groupcopy('processed','current','acquisition')
   groupcopy('processed','current','processing')
endif

if ($# = 2) then
   pltext($1,$2,32):$x,$y,$ys	    "plot text at supplied x and y positions"
else
  if ($# = 1) then
    pltext($1,0.98*wc2max,32):$x,$y,$ys
  else
    pltext:$x,$y,$ys		  "plot text at default x and y positions"
  endif
endif
$y=$y-0.5*$ys

"****Solvent is written by pltext via plexpinfo******"
"if (solvent<>'') and (solvent<>'none') then "
"  write('plotter',$x,$y,'Solvent: %s',solvent)"
"  $y = $y - $ys "
"endif "

jexp:$curexp
expactive($curexp):$active
if ($active=1) then 			" Current exp is active, read temp from acqstat"
  shell('showstat > ',curexp+'/stat') 
  lookup('mfile',curexp+'/stat','VT','active:','read'):$vtison
  if typeof('$vtison') then $e=0 else $e=1 $temp=$vtison endif
  if $e then
    write('plotter',$x,$y,' Temp. %1.1f C / %1.1f K',$temp,$temp+273.15)
  else
    write('plotter',$x,$y,' Ambient temperature')
  endif
  $y = $y - $ys
else
  on('temp'):$e
  if $e then
    write('plotter',$x,$y,' Temp. %1.1f C / %1.1f K',temp,temp+273.15)
    $y=$y - $ys
  endif
endif

$user=''
$userlabel='User'
exists('user','parameter'):$e					"** user **"
if $e then
  if user<>'' then
    $user=user
  endif
endif
exists('operator_','parameter'):$e
if $e>0.5 then
  if operator_<>'' then
    $userlabel='Operator'
    $user=operator_
  endif
endif
$sample=0
on('loc_'):$on						"** loc **"
if ($on>0.5) then
  if loc_>0 then
    $sample=loc_
  endif
endif
if $user<>'' then
  if $sample>0 then
    write('plotter',$x,$y,'Sample #%d, %s: %s',$sample,$userlabel,$user)
  else
    write('plotter',$x,$y,'%s: %s',$userlabel,$user)
  endif
  $y = $y - $ys
else
  if $sample>0 then
    write('plotter',$x,$y,'Sample #%d',$sample)
    $y = $y - $ys
  endif
endif

exists('systemname_','parameter'):$sysnameex
if ($sysnameex=0) then
		"If systemname exists, pltext would have already printed it"
$frq=''
substr(rftype,1,1):$rf
format(h1freq,3,0):$frq
if ($rf='b')or($rf='a') then
  $sys='VXR-'+$frq+'S'
else
  if $rf='c' then
    $sys='UNITY-'+$frq
  else
    if $rf='d' then
      if (Console='vnmrs') then
	 $sys='VNMRS-'+$frq
      elseif (Console='inova') then
         $sys='INOVA-'+$frq
      else
         $sys='UNITYplus-'+$frq
      endif
    else
      if $rf='e' then
        if (Console='mercury') then
	   $sys='Mercury-'+$frq
        else
	   $sys='GEMINI-'+$frq
        endif
      else
	if $rf='f' then
           if (Console='mercury') then
	      $sys='Mercury-'+$frq+'BB'
           else
	      $sys='GEMINI-'+$frq+'BB'
           endif
	else
	  $sys='Processed on'
	endif
      endif
    endif
  endif
endif
$sysname=''
shell('uname -n'):$sysname
write('plotter',$x,$y,'%s  "%s"',$sys,$sysname)
$y = $y - 1.5*$ys

endif


" check for 2D "
getdim:$dim
" check for wideline "
exists('tau1','parameter'):$e
if $e then exists('tau2','parameter'):$e endif
if $e then $wideline=1 else $wideline=0 endif
" check for solids "
exists('srate','parameter'):$e
if $e then $solids=1 else $solids=0 endif
$solids=0
if ($wideline) then
  write('plotter',$x,$y,'Solid-state echo')
	"Pulse sequence name is already written by pltext"
"else"
"  if seqfil<>'s2pul' then "
"    length(seqfil):$len "
"    if $len>10 then "
"      write('plotter',$x,$y,'SEQUENCE: %s',seqfil) "
"    else "
"      write('plotter',$x,$y,'PULSE SEQUENCE: %s',seqfil) "
"    endif "
"  else "
"    write('plotter',$x,$y,'PULSE SEQUENCE') "
"  endif "
endif
$y = $y - $ys

" pulse-sequence related parameters"
if ($wideline>0) then						"** np/dwell **"
  write('plotter',$x,$y,' Acq. size %d points',np)
  $y=$y-$ys
  write('plotter',$x,$y,' Sample time %1.1f usec',1e6/sw)
  $y=$y-$ys
endif

$a=size('d1')
if $a = 1 then
   if d1>0 then							"** d1 **"
     write('plotter',$x,$y,' Relax. delay %1.3f sec',d1)
     $y=$y-$ys
   endif
else
     write('plotter',$x,$y,' Relax. delay arrayed')
     $y=$y-$ys
endif

if ($dim=1) then						"** p1 (1D) **"
  $a=size('p1')
  if ($a = 1) then
     if p1>0 then
       if pw90>0 then
         write('plotter',$x,$y,' 1st pulse %1.1f degrees',p1/pw90*90)
       else
         write('plotter',$x,$y,' 1st pulse %1.1f usec',p1)
       endif
       $y=$y-$ys
       $pulsename='2nd pulse'
     else
       $pulsename='Pulse'
     endif
  else
        write('plotter',$x,$y,' 1st pulse arrayed')
        $y=$y-$ys
        $pulsename='2nd pulse'
  endif
  if pw90>0 then						"** pw (1D) **"
    write('plotter',$x,$y,' %s %1.1f degrees',$pulsename,pw/pw90*90)
  else
    write('plotter',$x,$y,' %s %1.1f usec',$pulsename,pw)
  endif
  $y=$y-$ys
endif

if $wideline>0 then						"** comp/WL **"
  exists('compul','parameter'):$e
  if $e then
    if compul='y' then
      write('plotter',$x,$y,'Composite pulses')
      $y=$y-$ys
    endif
  endif
  write('plotter',$x,$y,' 1st tau %1.1f usec',tau1)		"** tau1/WL **"
  $y=$y-$ys
  write('plotter',$x,$y,' 2nd tau %1.1f usec',tau2)		"** tau2/WL **"
  $y=$y-$ys
endif

if ($dim>1) then
  if seqfil='relayh' then  "exception: for cosy experiment label type"
    if relay=0 then
      $a=size('p1')
      if ($a = 1) then
        if p1>0 then
	  if pw=pw90 then
	    write('plotter',$x,$y,' COSY 90-%2.0f',p1/pw90*90)
	  else
	    write('plotter',$x,$y,' COSY 90-%2.0f',p1/pw*90)
	  endif
        else
	  write('plotter',$x,$y,' COSY 90-90')			"** 'cosy' **"
        endif
      endif
      $y=$y-$ys
    endif
  endif
endif

exists('mix','parameter'):$e					"** mix **"
if $e then
  write('plotter',$x,$y,' Mixing %1.3f sec',mix)
  $y=$y-$ys
endif

write('plotter',$x,$y,' Acq. time %1.3f sec',at)		"** at **"
$y=$y-$ys

if (sw>99999) then						"** sw **"
  write('plotter',$x,$y,' Width %1.1f kHz',sw/1000)
else
  if $dim>1 then
    write('plotter',$x,$y,' Width    %1.1f Hz',sw)
  else
    write('plotter',$x,$y,' Width %1.1f Hz',sw)
  endif
endif
$y=$y-$ys

exists('ni','parameter'):$e					"** sw1 **"
if ($dim>1) then
  write('plotter',$x,$y,' 2D Width %1.1f Hz',sw1)
  $y=$y-$ys
endif

if (ct=0)or($dim>1)or(arraydim>1) then
  $nt=nt
else
  $nt=ct
endif
$a=size('nt')
if ($a=1) then
   if $nt>1 then
     write('plotter',$x,$y,' %d repetitions',$nt)
   else
     write('plotter',$x,$y,' Single scan')
   endif
else
   write('plotter',$x,$y,' Arrayed repetitions')
endif
$y=$y-$ys

if $dim>1 then							"** ni **"
  if size('phase')=2 then
    write('plotter',$x,$y,' 2 x %d increments',ni)
  else
    write('plotter',$x,$y,' %d increments',ni)
  endif
  $y=$y-$ys
endif


" observe channel information"
if (rfl<>0)or(rfp<>0) then					"** tn/sfrq **"
  $corr=0-sw/2+rfl-rfp
else
  $corr=0
endif
write('plotter',$x,$y,'OBSERVE %4s, %11.7f MHz',tn,sfrq+$corr/1e6)
$y=$y-$ys

" decoupler channel information"
$i=4
$lastdmchar = ''
repeat
  substr(dm,$i,1):$lastdmchar
  $i=$i-1
until ($lastdmchar<>'') or ($i<1)
$i=$i+1
$char = ''
$dmon=0
$continuous=1
repeat
  substr(dm,$i,1):$char
  if $char<>'n' then $dmon=1 else $continuous=0 endif
  $i=$i-1
until ($i<1)
$i=4
$lastdmm = ''
repeat
  substr(dmm,$i,1):$lastdmm
  $i=$i-1
until ($lastdmm<>'') or ($i<1)

if $dmon>0 then
  if ($solids=0) then
    write('plotter',$x,$y,'DECOUPLE %3s, %11.7f MHz',dn,dfrq)	"** dn/dfrq **"
    $y=$y-$ys
    substr(amptype,2,1):$char
    if ($char = 'c') then
      on('dhp'):$on
      if $on then
	$power = dhp
	$pwr='High power'
	$unit=''
      else
	$pwr='Low power'
	$unit='dB atten.'
	$power=dlp
      endif
    else
      on('dpwr'):$on
      $power = dpwr
      $pwr='Power'
      $unit='dB'
    endif
    write('plotter',$x,$y,' %s %d %s',$pwr,$power,$unit)	"** 'power' **"
    $y=$y-$ys
    $dmm=''
    if $lastdmchar='n' then					"** gating **"
      write('plotter',$x,$y,' off during acquisition')
      $y=$y-$ys
      substr(dm,1,1):$char
      if $char='y' then
	write('plotter',$x,$y,' on during delay')
	$y=$y-$ys
	substr(dmm,1,1):$dmm
      endif
    else
      if $continuous then
	write('plotter',$x,$y,' continuously on')
	$y=$y-$ys
      else
	write('plotter',$x,$y,' on during acquisition')
	$y=$y-$ys
	substr(dm,1,1):$char
	if $char='n' then
	  write('plotter',$x,$y,' off during delay')
	  $y=$y-$ys
	endif
      endif
      $dmm=$lastdmm
    endif
    if $dmm<>'' then						"** dmm **"
      if $lastdmm='c' then write('plotter',$x,$y,' single frequency') endif
      if $lastdmm='f' then write('plotter',$x,$y,' broadband modulated') endif
      if $lastdmm='g' then write('plotter',$x,$y,' GARP-1 modulated') endif
      if $lastdmm='m' then write('plotter',$x,$y,' MLEV-16 modulated') endif
      if $lastdmm='n' then write('plotter',$x,$y,' noise modulated') endif
      if $lastdmm='p' then write('plotter',$x,$y,' %s modulated',dseq) endif
      if $lastdmm='r' then write('plotter',$x,$y,' square wave modulated') endif
      if $lastdmm='u' then write('plotter',$x,$y,' user modulation') endif
      if $lastdmm='w' then write('plotter',$x,$y,' WALTZ-16 modulated') endif
      if $lastdmm='x' then write('plotter',$x,$y,' XY-32 modulated') endif
      $y=$y-$ys
    endif
  else "solids"
    if xpol='y' then						"** xpolar **"
      write('plotter',$x,$y,' Cross polarization')
      $y=$y-$ys
      write('plotter',$x,$y,' Contact time %1.3f usec',p2)
      $y=$y-$ys
      if (p3>0) then
	write('plotter',$x,$y,' T1-rho(C) decay %1.3f usec',p3)
	$y=$y-$ys
      endif
      if (level1>0) or (level2>0) then
	write('plotter',$x,$y,' Decoupler power levels')
	$y=$y-$ys
	write('plotter',$x,$y,'	 Contact %d',level1)
	$y=$y-$ys
	write('plotter',$x,$y,'	 Dipolar %d',level2)
	$y=$y-$ys
      endif
    else "gated"
      write('plotter',$x,$y,' Gated decoupling')
      $y=$y-$ys
    endif
  endif
endif

" specific solids NMR parameters"
if $solids>0 then
  if pdp='y' then						"** pdp **"
    write('plotter',$x,$y,' CHn (n=1,2,3) suppressed')
    $y=$y-$ys
  endif
  if toss='y' then						"** TOSS **"
    write('plotter',$x,$y,' TOSS Sideband Suppression')
    $y=$y-$ys
  endif
  write('plotter',$x,$y,' Spinner rate %d',srate)		"** srate **"
  $y=$y-$ys
endif

if dp='n' then							"** dp='n' **"
  write('plotter',$x,$y,'Single precision data')
  $y=$y-$ys
endif


" Processing parameters"
write('plotter',$x,$y,'DATA PROCESSING')
$y=$y-$ys
on('lb'):$on
if $on then
  if lb>0 then							"** lb **"
    write('plotter',$x,$y,' Line broadening %1.1f Hz',lb)
  else								"** lb<0 **"
    write('plotter',$x,$y,' Resol. enhancement %1.1f Hz',-lb)
  endif
  $y=$y-$ys
endif
on('gf'):$on							"** gf **"
if $on then
  on('gfs'):$on
  if $on then
    write('plotter',$x,$y,' Gauss window %1.3f sec',gf)
    $y=$y-$ys
    write('plotter',$x,$y,'    center at %1.3f sec',gfs)	"** gfs **"
  else
    write('plotter',$x,$y,' Gauss apodization %1.3f sec',gf)	"** gf **"
  endif
  $y=$y-$ys
endif
on('sb'):$on
if $on then
  if (sb>0) then						"** sb **"
    write('plotter',$x,$y,' Sine bell %1.3f sec',sb)
  else
    write('plotter',$x,$y,' Sq. sine bell %1.3f sec',-sb)	"** sb<0 **"
  endif
  $y=$y-$ys
  on('sbs'):$on
  if $on then							"** sbs **"
    write('plotter',$x,$y,'  Shifted by %1.3f sec',sbs)
    $y=$y-$ys
  endif
endif
on('awc'):$on
if $on then							"** awc **"
  write('plotter',$x,$y,' Add. wt. constant %g',awc)
  $y=$y-$ys
endif


" F1 Processing parameters"
if $dim>1 then
  write('plotter',$x,$y,'F1 DATA PROCESSING')
  $y=$y-$ys
  on('lb1'):$on
  if $on then
    if lb1>0 then						"** lb1 **"
      write('plotter',$x,$y,' Line broadening %1.1f Hz',lb1)
    else							"** lb1<0 **"
      write('plotter',$x,$y,' Resol. enhancement %1.1f Hz',-lb1)
    endif
    $y=$y-$ys
  endif
  on('gf1'):$on
  if $on then
    on('gfs1'):$on
    if $on then							"** gf1 **"
      write('plotter',$x,$y,' Gauss window %1.3f sec',gf1)
      $y=$y-$ys
      write('plotter',$x,$y,'	 center at %1.3f sec',gfs1)	"** gfs1 **"
    else
      write('plotter',$x,$y,' Gauss apodization %1.3f sec',gf1) "** gf1 **"
    endif
    $y=$y-$ys
  endif
  on('sb1'):$on
  if $on then
    if (sb1>0) then						"** sb1 **"
      write('plotter',$x,$y,' Sine bell %1.3f sec',sb1)
    else							"** sb1<0 **"
      write('plotter',$x,$y,' Sq. sine bell %1.3f sec',-sb1)
    endif
    $y=$y-$ys
    on('sbs1'):$on
    if $on then							"** sbs1 **"
      write('plotter',$x,$y,'  Shifted by %1.3f sec',sbs1)
      $y=$y-$ys
    endif
  endif
  on('awc1'):$on
  if $on then							"** awc1 **"
    write('plotter',$x,$y,' Add. wt. constant %g',awc1)
    $y=$y-$ys
  endif
  write('plotter',$x,$y,'FT size %d x %d',fn,fn1)
else
  write('plotter',$x,$y,'FT size %d',fn)
endif
$y=$y-$ys

" calculate experiment time"
exists('ACQtime','parameter'):$acqtex
is_cpfid:$cpfid
$file=file
if ($acqtex) and ($cpfid) then $etime=ACQtime else EXPtime:$etime endif
file=$file
"exptime:$etime "
$seconds = $etime % 60
$minutes = $etime / 60
$hours = $minutes / 60
$minutes= $minutes % 60
if $hours<1 then
   if ($minutes < 10) then
	write('plotter',$x,$y,'Total time %d min %d sec',$minutes,$seconds)
   else
	write('plotter',$x,$y,'Total time %d min',$minutes)
   endif
else
  if ($minutes < 0.5) then
    write('plotter',$x,$y,'Total time %d hr', $hours)
  else
    write('plotter',$x,$y,'Total time %d hr, %d min',$hours,$minutes)
  endif
endif
$y=$y-$ys
return($x,$y,$ys)
