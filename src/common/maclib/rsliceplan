"macro rsliceplan"
" Ancestry: ssplan	8.1 4/16/93   Spectroscopy Imaging Systems"
"***************************************************************"
" rsliceplan                                                     "
"                                                               "
" Macro to provide slice position and euler angles for an       "
" oblique target scan. The user marks a ray on the scout image  "
" using the cursor of the 2D package. The program assumes that  " 
" the ray corresponds to the center of the target slice plane.  "
"***************************************************************"
" gets arguments..  x1,y1 x2,y2  nslices..."

"-- Constants ---------------------------------------------"
$prog = 'sliceplan: '                     "*Program ID*"
$mm_cm = 0.1                              "*mm to cm conversion*"


"-- Find and read infile ----------------------------------"
" Find Values of the Euler Angles; Check if array size > 1 "
"----------------------------------------------------------"
$len = size('psi')
if ($len > 1.5)  then  $psi = psi[element]  else  $psi = psi  endif

$len = size('phi')
if ($len > 1.5)  then  $phi = phi[element]  else  $phi = phi  endif

$len = size('theta')
if ($len > 1.5)  then  $theta = theta[element]  else  $theta = theta  endif

$spsi=''
$sphi=''
$stheta=''
format($psi,6,3):$spsi
format($phi,6,3):$sphi
format($theta,6,3):$stheta


"-- Compute logical frame coordinates ---------------------"
" The variables kr1, kp1, ks1 are the logical frame        "
" coordinates for the first point; ditto for kr2, kp2, ks2 "
"                                                          "
" We assume that all planes are parallel, so that the      "
" slice position, pss, does not matter.  For future        "
" expansion, in which multi-angle scout planes may be      "
" present, the proper pss element will have to be selected "
"----------------------------------------------------------"
if (trace='f2') then
$kr1 = pro+$1-lro/2
$kp1 = ppe+$2-lpe/2
$kr2 = pro+$3-lro/2
$kp2 = ppe+$4-lpe/2
else
$kr1 = ppe+$2-lpe/2
$kp1 = pro+$1-lro/2
$kr2 = ppe+$4-lpe/2
$kp2 = pro+$3-lro/2
endif
$ks1 = pss[1]
$ks2 = pss[1]


"-- Decode Euler angles & slice offset --------------------"
$skr1 = ''  $skp1 = ''  $sks1 = '' 
$skr2 = ''  $skp2 = ''  $sks2 = ''
format($kr1,6,3):$skr1
format($kr2,6,3):$skr2
format($kp1,6,3):$skp1
format($kp2,6,3):$skp2
format($ks1,6,3):$sks1
format($ks2,6,3):$sks2
" there is a chance we'd have to swap screen X/Y based on trace parameter"
$cmd = 'plane_decode '+$spsi+' '+$sphi+' '+$stheta
$cmd = $cmd+' '+$skr1+' '+$skp1+' '+$sks1
$cmd = $cmd+' '+$skr2+' '+$skp2+' '+$sks2
shell($cmd):$psi,$phi,$theta,$pss_0


"-- Set parameters ----------------------------------------"
" Values are written into the target parameters for        "
" transfer to another experiment.  If the values of t_gap  "
" and t_ns have been set, these are used to define a       "
" multislice stack about the marked slice.                 "
"----------------------------------------------------------"
t_psi = $psi
t_phi = $phi
t_theta = $theta
t_thk = thk
t_pss = 0

if (t_ns < 2) then
    t_pss = $pss_0
    t_ns = 1
else
    $step = $mm_cm*(thk + t_gap)
    $start = $pss_0 - trunc(t_ns/2)*$step

    $k = 1
    repeat
        t_pss[$k] = $start + $step*($k - 1)
        $k = $k + 1
    until ($k > t_ns)
endif


"-- Print out results to line 3 ---------------------------"
" Results are advisory only, values are stored in target   "
" parameters                                               "
"----------------------------------------------------------"
write('line3',
  'Target slice values  psi: %.1f   phi: %.1f   theta: %.1f   pss: %.2f',
  $psi, $phi, $theta, $pss_0)
"$size = size('t_pss')"

