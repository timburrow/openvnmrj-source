
*******************************************************************************
destroy	- 	destroy a variable
destroy	- 	destroy a single element of an arrayed variable
*******************************************************************************

  This command destroys a variable in one of the variable trees.
  The variable trees are 'current', 'global', 'processed', 'usertree',
  and 'systemglobal'.  The default tree is 'current'.
  If destroy is called for a non-existent parameter, the command will
  abort with a message.  If an optional return value is given, it
  will indicate success (1) or failure (0) and the command will not
  abort.  The first argument (names) can be a list of space separated
  names. When using a list of names, the destroy command will abort
  only if none of the parameters in the list exist. The destroy command
  will update the array parameter if needed.

  An optional third argument specifies the index of an arrayed variable
  to be destroyed. The tree argument must be supplied if the index is used.
  An error is given if the specfied index is larger than the number of
  array elements. If a variable has only one element and the index 1 is
  given, the entire variable is destroyed. When used with the array index,
  the destroy command will not update the array parameter.
 
  Usage -- destroy(name[,tree])
           destroy(name[,tree]):$ok
              tree can be  current,global,processed,systemglobal, usertree
           destroy(name,tree,index)

  Examples:

    destroy('a')           Destroy a variable in current tree.
    destroy('c','global')  Destroy a variable in the global tree.
    destroy('par1 par2 par3') Destroy the three parameters from
                           the current tree.
    destroy('acqstatus','current',3) Destroy the third element of
                           the acqstatus arrayed parameter.
   

  See also: create - create a new variable
