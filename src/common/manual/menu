
*******************************************************************************
menu		- turn on menu system and display current menu
menu('name')	- turn on menu system and display menu 'name'
menu('name','altname')	- turn on menu system and display menu 'altname'
menu('off')	- turn off menu system
newmenu('name')	- select the menu 'name'.
newmenu:n1     	- set the parameter n1 to the name of the current menu.
*******************************************************************************

The menu system allows a user to perform most actions with the mouse,
rather than typing in commands. All menus are stored in the library
'menujlib' in the system directory. See "menuvi" to change these menus.
The interactive commands bring up there own menus. For these commands,
the menu names start with the name of the command. For example, the ds
command brings up the "ds_1" menu. If two menu names are supplied to
the menu command, then the next time a menu is requested, if the requested
name matches the first name supplied to the menu command, the alternate
menu will be displayed instead. These allows one to substitute a different
menu than the one the interactive program would use. For example,
menu('ds_1','mtune') ds would bring up the mtune menu instead of the ds_1
menu.


Newmenu allows one to select a menu without its immediate activation.
This feature is must useful in order to select which menu will be
active when an interactive command exits.  For example, the menu
  newmenu('manipulate_1D') ds
will cause the "manipulate_1D" menu to be executed when the return
button in the "ds" menu is selected.
newmenu:n1 will return the name of the currently active menu to the string
parameter following the colon (in this example,  the parameter "n1").
