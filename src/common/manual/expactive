
*******************************************************************************
expactive(n)<:$ans> - determine if experiment n has an active acquisition
expactive('user')<:$ans> - determine if current user has an active or queued experiment
expactive('auto')<:$ans,$dir> - determine if system is in automation mode
expactive('current')<:$ans> - determine current active experiment number and user
expactive<:$ans>    - determine if current experiment has an active acquisition
*******************************************************************************

  expactive will determine whether an acquisition is active or pending in
  the current experiment. An experiment number n, where n is a number from
  1 to 9999,  may be supplied to expactive to determine if an acquisition
  is active or pending in experiment n.  Without a return argument,
  expactive displays the results on line 3.  If a return argument
  is appended to the expactive command, it will be set to the following:
    -1  acquisition is not possible (for example, it is a data station)
     0  no acquisition is active in the requested experiment
     1  an acquisition is active in the requested experiment
     2 or larger if an acquisition is queued in the requested experiment.
        Subtract 1 from the value to determine its position in the
        acquisition queue.

  If the keyword 'user' is supplied as an argument, expactive will determine
  if the current user has an active or queued experiment. Without a return argument,
  expactive('user') displays the results on line 3.  If a return argument
  is appended to the expactive('user') command, it will be set as in the case above.

  If the keyword 'auto' is supplied as an argument, expactive will determine
  if the system is in automation mode. Without a return argument,
  expactive('auto') displays the results on line 3.  If a return argument
  is appended to the expactive('auto') command, it will be set to 1
  if the system is in automation mode, 0 otherwise. As a second return value,
  the path name of the last automation run will be returned.

  If the keyword 'current' is supplied as an argument, expactive will determine
  which experiment, if any, has an active acquisition command running.
  Without a return argument, expactive('current') displays results on line 3.
  An experiment is still considered active if it holds up additional
  acquisitions during its wexp processing by means of the 'wait' flag.
  If a return argument is appended to the expactive('current'):$exp command,
  it will be set to the following:
    -1  acquisition is not possible (for example, it is a data station)
     0  no acquisition is active
     n  an acquisition is active in experiment "n".
  If a second return argument is appended to the expactive('current'):$exp,$user
  command, the second argument will be set to the user that started the acquisition.
  If the system is running in automation mode, this second argument will be set
  to 'auto'.  If no acquisition is running, this second argument will be set
  to 'nobody'.
