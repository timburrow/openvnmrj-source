//@copy-c-declaration /*
//@copy-c-declaration * 
//@copy-c-declaration * Copyright (c) 1999-2000 Varian,Inc. All Rights Reserved. 
//@copy-c-declaration * This software contains proprietary and confidential
//@copy-c-declaration * information of Varian, Inc. and its contributors.
//@copy-c-declaration * Use, disclosure and reproduction is prohibited without
//@copy-c-declaration * prior consent.
//@copy-c-declaration */
//@copy-c-declaration /*
//@copy-c-declaration *  Author: Greg Brissey  4/20/2004
//@copy-c-declaration */

//@copy-c-declaration #include "NDDS_Obj.h"



//@copy-c-declaration /* Console Case Actions */
//@copy-c-declaration #ifndef HOSTACQSTRUCTS_H

/* Console Case Actions */
const long NDDS_THROUGHPUT_TEST_PACKET_SIGNAL_END = -1;
const long ECHO         =   1;
const long XPARSER      =   2;
const long APARSER      =   3;
const long ABORTACQ     =   4;
const long HALTACQ      =   5;
const long STATINTERV   =   6;
const long STARTLOCK    =   7;
const long STARTINTERACT=   8;
const long GETINTERACT  =   9;
const long STOPINTERACT =   10;
const long AUPDT        =   11;
const long STOP_ACQ     =   12;
const long ACQDEBUG     =   13;
const long HEARTBEAT    =   14;
const long GETSTATBLOCK =   15;
const long ABORTALLACQS =   16;
const long OK2TUNE      =   17;
const long ROBO_CMD_ACK =   18;
 
//@copy-c-declaration /* Distinguish this one (console information)
//@copy-c-declaration    from CONF_INFO (configuration information) */
 
const long CONSOLEINFO  =   19;
 
const long DOWNLOAD     =   20;
const long STARTFIDSCOPE=   21;
const long STOPFIDSCOPE =   22;
const long GETCONSOLEDEBUG= 23;

const long QUERY_CNTLRS_PRESENT = 25;

const long FLASH_UPDATE= 30;
const long FLASH_COMMIT= 31;
const long FLASH_DELETE= 32;
const long NDDS_VER_QUERY= 33;

//@copy-c-declaration #endif
 
//@copy-c-declaration #ifndef MAX_SHIMS_CONFIGURED
const long MAX_SHIMS_CONFIGURED =   48;
//@copy-c-declaration #endif
 


//@copy-c-declaration /* topic name form */
//@copy-c-declaration /* topic names form: h/master/cmdstrm, master/h/cmdstrm */
const string CNTLR_PUB_CMDS_TOPIC_FORMAT_STR = "master/h/cmdstrm";
const string HOST_SUB_CMDS_TOPIC_FORMAT_STR = "master/h/cmdstrm";

const string HOST_PUB_CMDS_TOPIC_FORMAT_STR = "h/master/cmdstrm";
const string CNTLR_SUB_CMDS_TOPIC_FORMAT_STR = "h/master/cmdstrm";

//@copy-c-declaration /* download types */
const  long DATA_FID =  1;


const long MAX_IPv4_UDP_SIZE_BYTES  =  65535;   /* IPv4 UDP max Packet size */
const long NDDS_MAX_Size_Serialize = 64512;    /* serialization for NDDS  63KB */
const long MAX_FIXCODE_SIZE = 64000;		 /* Max data size bytes */
const long CMD_MAX_STR_SIZE = 512;

struct Monitor_Cmd {
        long cmd;
        long arg1;
        long arg2;
        long arg3;
        long arg4;
        long arg5;
	unsigned long crc32chksum;  /* CRC-32 checksum */
        string<CMD_MAX_STR_SIZE> msgstr;
};

//@copy-c-declaration #ifdef __cplusplus
//@copy-c-declaration     extern "C" {
//@copy-c-declaration #endif

//@copy-c-declaration extern void getMonitor_CmdInfo(NDDS_OBJ *pObj);

//@copy-c-declaration #ifdef __cplusplus
//@copy-c-declaration }
//@copy-c-declaration #endif

// //@copy-c-declaration #if 0
// //@copy-c  /* Direct Code from Codes_Downld.x */
// //@copy-c void getMonitor_CmdInfo(NDDS_OBJ *pObj)
// //@copy-c {
// //@copy-c     extern Monitor_CmdTypeSupport_register_type(DDS_DomainParticipant*,char *);
// //@copy-c     extern Monitor_CmdTypeSupport_create_data_ex(int);
// //@copy-c     strcpy(pObj->dataTypeName,Monitor_CmdTYPENAME);
// //@copy-c 
// //@copy-c     pObj->TypeRegisterFunc = Monitor_CmdTypeSupport_register_type;
// //@copy-c     pObj->TypeAllocFunc = (DataTypeAllocate) Monitor_CmdTypeSupport_create_data_ex;
// //@copy-c     // pObj->TypeSizeFunc = Monitor_CmdMaxSize;
// //@copy-c }
// //@copy-c-declaration #endif
