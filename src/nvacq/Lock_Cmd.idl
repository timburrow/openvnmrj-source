//@copy-c-declaration /*
//@copy-c-declaration *
//@copy-c-declaration * Varian,Inc. All Rights Reserved.
//@copy-c-declaration * This software contains proprietary and confidential
//@copy-c-declaration * information of Varian, Inc. and its contributors.
//@copy-c-declaration * Use, disclosure and reproduction is prohibited without
//@copy-c-declaration * prior consent.
//@copy-c-declaration */
//@copy-c-declaration /*
//@copy-c-declaration *  Author: Greg Brissey  5/06/2004
//@copy-c-declaration */

//@copy-c-declaration #include "NDDS_Obj.h"


//@copy-c-declaration /* Lock Case Actions */

const long LK_SET_GAIN  =   21;
const long LK_SET_POWER =   22;
const long LK_SET_PHASE =   23;
const long LK_ON        =   24;
const long LK_OFF       =   25;
const long LK_SET_RATE  =   26;
const long LK_SET_FREQ  =   27;
const long LKRATE       =   37;

const long LK_AUTOLOCK  = 504;   /* Acode value */
 

//@copy-c-declaration /* topic name form */
//@copy-c-declaration /* topic names form: ?/lock/cmdstrm, lock/?/cmdstrm */

const string LOCK_CMDS_TOPIC_FORMAT_STR = "%s/lock/cmds";
const string LOCK_SUB_CMDS_TOPIC_FORMAT_STR = "%s/lock/cmds";
const string LOCK_SUB_CMDS_PATTERN_TOPIC_STR = "*/lock/cmds";
const string LOCK_CMDS_M21TOPIC_FORMAT_STR = "lock/cmds";
const string LOCK_CMDS_TOPIC_STR = "master/lock/cmds";
const string GRAD_CMDS_TOPIC_STR = "master/grad/cmds";

// /* const HOST_PUB_CMDS_TOPIC_FORMAT_STR = "h/master/cmdstrm";
// const CNTLR_SUB_CMDS_TOPIC_FORMAT_STR = "h/master/cmdstrm";
// */

// /*
// union UnionArg switch
//   (int argType) {
// 	case 0: int intArg;
// 	case 1: float floatArg;
//         case 2:  double dblArg;
//   };


// struct Lock_Cmd {
//         long cmd;
// 	UnionArg arg1;
// 	UnionArg arg2;
// 	UnionArg arg3;
// 	unsigned long crc32chksum; 
// };
// */

struct Lock_Cmd {
        long key; //@key
        long cmd;
        long arg1;
        long arg2;
        double arg3;
        double arg4;
	unsigned long crc32chksum;  /* CRC-32 checksum */
};

//@copy-c-declaration 
//@copy-c-declaration #ifdef __cplusplus
//@copy-c-declaration     extern "C" {
//@copy-c-declaration #endif
//@copy-c-declaration 
//@copy-c-declaration extern void getLock_CmdInfo(NDDS_OBJ *pObj);
//@copy-c-declaration 
//@copy-c-declaration #ifdef __cplusplus
//@copy-c-declaration }
//@copy-c-declaration #endif
//@copy-c-declaration 

// //@copy-c 
// //@copy-c  /* Direct Code from Codes_Downld.x */
// //@copy-c void getLock_CmdInfo(NDDS_OBJ *pObj)
// //@copy-c {
// //@copy-c     strcpy(pObj->dataTypeName,Lock_CmdNDDSType);
// //@copy-c 
// //@copy-c     pObj->TypeRegisterFunc = Lock_CmdNddsRegister;
// //@copy-c     pObj->TypeAllocFunc = (DataTypeAllocate) Lock_CmdAllocate;
// //@copy-c     pObj->TypeSizeFunc = Lock_CmdMaxSize;
// //@copy-c }
// //@copy-c 

