# 
# makepsg.lnx

ifndef sccsdir
sccsdir = /vsccs/sccs
endif
ifndef lnxobjdir
lnxobjdir = /vobj/lnx
endif

SHELL     = /bin/sh
MAKEFILE  = makepsg.lnx
SCCSDIR   = $(sccsdir)

NCOMM_LIB_DIR = $(lnxobjdir)/proglib/ncomm

# Shared Library version number   E.G.  3.2 -> libparam.so.3.2,libpsglib.so.3.2
SO_LIB_VER=$(psg_so_ver)

#-- Normal operational compile flags
CC        =  gcc
CFLAGS    =  -fPIC -g -c -Wall -O -m32
CDEFINE   =  -DLINUX -DNESSIE
COMPILE.c =  $(CC) $(CFLAGS) $(CDEFINE)
                                                                                                      
LDSOFLAGS =  -shared -m32
LINK.c    =  $(CC) $(LDSOFLAGS)

#--- SCCS sources ----
PSGSEQ_SCCS_SRC   =$(SCCSDIR)/psglib/SCCS/s.
VNMR_SCCS_SRC     =$(SCCSDIR)/vnmr/SCCS/s.
XRACQ_SCCS_SRC    =$(SCCSDIR)/xracq/SCCS/s.
EXPPROC_SCCS_SRC  =$(SCCSDIR)/expproc/SCCS/s.
PSG_SCCS_SRC      =$(SCCSDIR)/psg/SCCS/s.
SCRIPT_SCCS_SRC   =$(SCCSDIR)/scripts/SCCS/s.
NCOMM_SCCS_SRC    =$(SCCSDIR)/ncomm/SCCS/s.

#----  PSG Library being updated -----
LIBPSGLIB.a  = libpsglib.a
LIBPARAM.a   = libparam.a

#---  SCCS extraction commands for sources needed.  -------
PSGSEQ_SGET  = sccs -p$(SCCSDIR)/psglib/SCCS get
VNMR_SGET    = sccs -p$(SCCSDIR)/vnmr/SCCS get
XRACQ_SGET   = sccs -p$(SCCSDIR)/xracq/SCCS get
EXPPROC_SGET = sccs -p$(SCCSDIR)/expproc/SCCS get
PSG_SGET     = sccs -p$(SCCSDIR)/psg/SCCS get
SCRIPT_SGET  = sccs -p$(SCCSDIR)/scripts/SCCS get
NCOMM_SGET   = sccs -p$(SCCSDIR)/ncomm/SCCS get

#------------------------------------------------------------------------
#--- VNMR sources that are needed for PSG
#------------------------------------------------------------------------
EMPTY_SRC=
VNMR_SRC=                       \
		asmfuncs.c	\
                assign.c	\
                allocate.c      \
                lockfreqfunc.c  \
                pvars.c         \
                shims.c        \
                symtab.c        \
                tools.c         \
                vfilesys.c      \
                variables1.c

VNMR_OBJ= $(VNMR_SRC:.c=.o)

#--- VNMR header files that are needed for PSG
VNMR_HDR=			\
		allocate.h	\
		asm.h		\
		data.h		\
		dpsdef.h	\
		errorcodes.h	\
		graphics.h	\
		group.h		\
		init.h		\
		params.h	\
		pvars.h		\
		shims.h		\
		symtab.h	\
		tools.h		\
		variables.h	\
		vfilesys.h	\
		wjunk.h

#------------------------------------------------------------------------
#-- common PSG sources files 
#------------------------------------------------------------------------
PSG_SRC=			\
                abort.c         \
                active.c        \
		apshape_pulse.c \
		aptable.c	\
		apuserdev.c	\
		arrayfuncs.c	\
		autofuncs.c     \
                convert.c	\
                convertapbout.c	\
                convertipa.c	\
                cps.c           \
                crb_setup.c	\
                decfuncs.c      \
		device.c	\
		ecc_setup.c	\
		ecc_worstCase.c	\
                eventoverhead.c \
                formXLwords.c   \
		freq_device.c	\
		freq_list.c	\
		freqfuncs.c	\
                gate.c          \
                gatedecoupler.c \
                getparm.c       \
		gradient.c	\
		hash.c		\
                hsdelay.c       \
                hwlooping.c     \
                initHSlines.c   \
                initacqparms.c  \
                initauto.c      \
                initfreqobj.c   \
                initfunc.c      \
		initobjects.c	\
                initrf.c        \
		init_u_glbl.c	\
                initval.c       \
                interlktests.c  \
		lc_hdl.c	\
		lc_index.c	\
		lk_sh.c		\
                looping.c       \
                math.c          \
                miscfuncs.c     \
                objerror.c      \
                Pbox_HT.c       \
                Pbox_psg.c      \
                phaseing.c      \
                preacqdelay.c   \
		pre_exp_seq.c	\
		pre_fid_seq.c	\
		presequence.c	\
                P_receive.c     \
                psg.c           \
                rcvrfuncs.c     \
		rfchanconst.c	\
                sendasync.c     \
                setHSlines.c	\
                setparm.c       \
		signalhandler.c	\
		sis_misc.c	\
		sis_initpar.c	\
		sis_loop.c	\
		sis_oblique.c	\
		sis_position.c	\
		sisrfpatterns.c	\
		sli_device.c	\
		ssha.c		\
                status.c        \
                stubs.c         \
                timerwords.c    \
		treefuncs.c	\
                vtfuncs.c	\
                wetfuncs.c	\
		wg.c		\
                xmath.c

DPS_DUMMY_SRC=			\
		x_ps.c

DPS_DUMMY_OBJ= $(DPS_DUMMY_SRC:.c=.o)

PSG_OBJ= $(PSG_SRC:.c=.o)

#----- PSG header files that are needed
#------------------------------------------
PSG_HDR=			\
		makeuserpsg.lnx	\
		abort.h		\
		acqparms.h	\
		apdelay.h	\
		aptable.h	\
		dsp.h		\
		ecc.h		\
		fcprint.h	\
		design_flowcomp.h	\
		psg_utils.h	\
		macros.h	\
		rfconst.h	\
		chanstruct.h	\
		standard.h	\
		vnmrsys.h	\
		oopc.h		\
		objerror.h	\
		power.h		\
		prescan.h		\
		common.p	\
		device.p	\
		ap_device.p	\
		apbit_device.p	\
		attn_device.p   \
		event_device.p	\
		freq_device.p	\
		REV_NUMS.h	\
		lc_index.h	\
		Pbox_HT.h	\
		Pbox_psg.h	\
		rfchan_device.p	\
		wetfuncs.h


#----- PSG source that are required for acquisition ----
#------------------------------------------------------------

CND_PSG_SRC=			\
                ap_device.c     \
                apbit_device.c  \
                attn_device.c   \
                attr_funcs.c    \
		attr_valtype.c	\
                delay.c         \
		event_device.c	\
		freqsweep.c	\
                offset.c        \
		power.c		\
                pulses.c        \
		rfchan_device.c

CND_PSG_OBJ= $(CND_PSG_SRC:.c=.o)

#---------------------------------------------------------------------
#   psg source code that can be included in Users Pulse Sequences
#   i.e. C header files 
#---------------------------------------------------------------------
PSG_HDR_C=			\
		revmode.c

#----- expproc header files that are needed
EXPPROC_HDR=			\
                expDoneCodes.h	\
		shrexpinfo.h

EXPPROC_SRC=

EXPPROC_OBJ= $(EXPPROC_SRC:.c=.o)

#------------------------------------------------------------------------
#--- NCOMM cources that are needed 
#------------------------------------------------------------------------
# Communications libraries
NCOMM_HDR=			\
		mfileObj.h

#----- xracq header files that are needed
XRACQ_HDR=			\
		ACQ_SUN.h	\
		acodes.h	\
		gradient.h	\
		lc.h

#----- PSG source files that are needed
PSGSEQ_SRC=			\
		s2pul.c

PSGSEQ_OBJ= $(PSGSEQ_SRC:.c=.o)

#----- PSG SEQUENCE header files that are needed
PSGSEQ_HDR=

#---- Vnmr Headers Needed for User Programming
USR_VNMR_HDR=			\
		asm.h		\
		data.h		\
		errorcodes.h	\
		group.h		\
		params.h	\
		pvars.h		\
		shims.h		\
		symtab.h	\
		dpsdef.h	\
		variables.h

#---- Vnmr cources Needed for User Programming
USR_VNMR_SRC=			\
		lockfreqfunc.c

#---- PSG sources Needed for User Programming but not used in psglib.
USR_PSG_SRC=			\
                shape_pulse.c   \
                spcl3rdattn.c

LINTLIB_SRC=			\
		lintfile.c

#---- seqgen utilities needed -------------------------
SEQGEN_MAKE=			\
		seqgenmake

SEQGEN_UTIL=			\
		seqgen.sh

#---- All sources and headers required for compilation -----
ALLSRC= $(VNMR_SRC) $(VNMR_HDR) $(PSG_SRC) $(PSG_HDR) $(PSG_HDR_C) \
	$(XRACQ_HDR) $(CND_PSG_SRC) $(DPS_DUMMY_SRC) $(EXPPROC_HDR) \
	$(EXPPROC_SRC) $(NCOMM_HDR)	\
	$(PSGSEQ_SRC) $(PSGSEQ_HDR) $(LINTLIB_SRC)	\
	$(SEQGEN_MAKE) $(SEQGEN_UTIL)

ALLOBJ= $(PSG_OBJ) $(CND_PSG_OBJ) $(DPS_DUMMY_OBJ) \
	 $(EXPPROC_OBJ) $(VNMR_OBJ)

LINTFILES= $(ALLSRC:.c=.ln)
LIBS= -lm

	  #"LIBS= -lacqcomm -lm -lsocket -lnsl"  \
#---- Targets ------------------------------------
                                                                                                                   
std LINUX : $(MAKEFILE) depend
	rm -f s2pul.o
	( $(MAKE) -e -f $(MAKEFILE) "LIBS= -lacqcomm -lm -lnsl"  \
	                            libparam.so libpsglib.so seqgen s2pul_lib )
	@echo "Linux PSG static and shared libraries complete ---------------------"

MACOS : $(MAKEFILE) depend
	rm -f s2pul.o
	( $(MAKE) -e -f $(MAKEFILE) "CDEFINE= -DMACOS -DLINUX -DNESSIE"  \
	                            maclibparam maclibpsg seqgen s2pul )
	@echo "Mac PSG static libraries complete ---------------------"

depend: src
	makedepend -f $(MAKEFILE) -Y $(CDEFINE) $(ALLSRC) 2>/dev/null
                                                                                                      
.PHONY: clean cleanall
                                                                                                      
clean:
	rm -f *.o *.so *.so.*
                                                                                                      
cleanall:
	rm -f *.c *.C *.h *.o *.a *.so *.so.* *.p *.sh exp.*
	rm -f s2pul seqgen seqgenmake

#-----  Recursive Targets ----------------------------------------------------

s2pul : $(PSGSEQ_OBJ) $(DPS_DUMMY_OBJ)
	(umask 2; $(CC) -o $@  \
		   $(PSGSEQ_OBJ) $(DPS_DUMMY_OBJ) libpsglib.a libparam.a $(LIBS) )

s2pul_lib:  $(PSGSEQ_OBJ) $(DPS_DUMMY_OBJ)
	(umask 2; $(LINK.c) -o s2pul -L$(NCOMM_LIB_DIR)   \
                  $(PSGSEQ_OBJ) $(DPS_DUMMY_OBJ) $(LIBPSGLIB.a) $(LIBPARAM.a) $(LIBS) )

src Source : $(MAKEFILE) $(ALLSRC)
	@echo Sources up to date...

$(LIBPARAM.a) : $(VNMR_OBJ)
	- (umask 2; rm -f $@)
	@(umask 2; ar rv $@ $(VNMR_OBJ))

maclibparam : $(VNMR_OBJ)
	@(umask 2; libtool -static -o libparam.a $(VNMR_OBJ))

libparam.so : $(LIBPARAM.a)
	- (umask 2; rm -f $@.*)
	@(umask 2; $(LINK.c) -Wl,-soname,$@ -o $@.$(SO_LIB_VER) $(VNMR_OBJ))
	@(umask 2; ln -s $@.$(SO_LIB_VER) $@)

$(LIBPSGLIB.a) : $(PSG_OBJ) $(CND_PSG_OBJ)
	- (umask 2; rm -f $@)
	@(umask 2; ar rv $@ $(PSG_OBJ) $(CND_PSG_OBJ) )

maclibpsg: $(PSG_OBJ)
	@(umask 2; libtool -static -o libpsglib.a $(PSG_OBJ) )

libpsglib.so : $(LIBPSGLIB.a)
	- (umask 2; rm -f $@ $@.*)
	@(umask 2; $(LINK.c) -Wl,-soname,$@ -o $@.$(SO_LIB_VER) $(PSG_OBJ) $(CND_PSG_OBJ))
	@(umask 2; ln -s $@.$(SO_LIB_VER) $@)

#--- Object dependencies -------------------------------------------

$(ALLOBJ) : $(@:.o=.c)
	(umask 2; $(COMPILE.c) -DPSG_LC $(@:.o=.c) )

$(PSGSEQ_OBJ) : $(@:.o=.c)
	(umask 2; $(COMPILE.c) -I. $(@:.o=.c) )

#------ makefile extraction via SCCS allways. -------
$(MAKEFILE) : 
	$(PSG_SGET) $@

#------------  Source Extraction via SCCS or Links ---------------

$(VNMR_SRC) $(VNMR_HDR) :  %:$(VNMR_SCCS_SRC)%
	$(VNMR_SGET) $@

$(PSGSEQ_SRC) $(PSGSEQ_HDR) :  %:$(PSGSEQ_SCCS_SRC)%
	$(PSGSEQ_SGET) $@

$(EXPPROC_SRC) $(EXPPROC_HDR) :  %:$(EXPPROC_SCCS_SRC)%
	$(EXPPROC_SGET) $@

# $(NCOMM_SRC_LIB) $(NCOMM_HDR_LIB) :  %:$(NCOMM_SCCS_SRC)%
#	$(NCOMM_SGET) $@

$(NCOMM_HDR) :  %:$(NCOMM_SCCS_SRC)%
	$(NCOMM_SGET) $@

$(XRACQ_HDR) :  %:$(XRACQ_SCCS_SRC)%
	$(XRACQ_SGET) $@

$(PSG_SRC) $(PSG_HDR) $(PSG_HDR_C) \
$(DPS_DUMMY_SRC) \
$(USR_PSG_SRC) $(CND_PSG_SRC) \
$(LINTLIB_SRC) $(WFG_PSG_SRC) \
$(SEQGEN_MAKE):  %:$(PSG_SCCS_SRC)%
	$(PSG_SGET) $@

$(SEQGEN_UTIL) :  %:$(SCRIPT_SCCS_SRC)%
	$(SCRIPT_SGET) $@

# DO NOT DELETE THIS LINE -- make depend uses it

asmfuncs.o: asm.h
assign.o: group.h params.h variables.h
lockfreqfunc.o: vnmrsys.h group.h
pvars.o: vnmrsys.h group.h symtab.h params.h variables.h wjunk.h
shims.o: group.h
symtab.o: symtab.h
tools.o: vnmrsys.h tools.h
vfilesys.o: vnmrsys.h group.h tools.h
variables1.o: graphics.h group.h params.h symtab.h variables.h init.h
pvars.o: variables.h
abort.o: group.h
active.o: variables.h group.h
apshape_pulse.o: acodes.h oopc.h acqparms.h rfconst.h aptable.h apdelay.h
apshape_pulse.o: macros.h vfilesys.h
aptable.o: acqparms.h acodes.h aptable.h symtab.h variables.h vfilesys.h
aptable.o: group.h
apuserdev.o: oopc.h acodes.h acqparms.h macros.h
arrayfuncs.o: oopc.h group.h variables.h rfconst.h acqparms.h shims.h
autofuncs.o: group.h acodes.h rfconst.h acqparms.h shims.h macros.h
convert.o: acodes.h acqparms.h aptable.h group.h expDoneCodes.h REV_NUMS.h
convert.o: dsp.h lc_index.h
convertipa.o: acodes.h acqparms.h
cps.o: group.h symtab.h variables.h oopc.h acodes.h rfconst.h acqparms.h
cps.o: aptable.h macros.h apdelay.h dsp.h
crb_setup.o: vnmrsys.h acodes.h acqparms.h group.h macros.h
decfuncs.o: oopc.h group.h acodes.h rfconst.h acqparms.h
device.o: oopc.h device.p common.p
ecc_setup.o: vnmrsys.h acodes.h group.h ecc.h
ecc_worstCase.o: vnmrsys.h group.h ecc.h
eventoverhead.o: apdelay.h
formXLwords.o: rfconst.h acqparms.h
freq_device.o: rfconst.h acodes.h oopc.h freq_device.p ap_device.p device.p
freq_device.o: common.p
freq_list.o: vnmrsys.h acodes.h oopc.h ACQ_SUN.h acqparms.h group.h rfconst.h
freq_list.o: aptable.h macros.h
freqfuncs.o: group.h variables.h params.h
gate.o: acodes.h
gatedecoupler.o: oopc.h acodes.h rfconst.h acqparms.h macros.h apdelay.h
gatedecoupler.o: group.h
gradient.o: group.h acodes.h rfconst.h acqparms.h gradient.h macros.h
gradient.o: aptable.h apdelay.h ACQ_SUN.h
hsdelay.o: acodes.h apdelay.h rfconst.h macros.h
hwlooping.o: oopc.h macros.h apdelay.h group.h acodes.h rfconst.h acqparms.h
hwlooping.o: shrexpinfo.h dsp.h
initHSlines.o: acodes.h rfconst.h group.h acqparms.h
initacqparms.o: mfileObj.h variables.h data.h group.h acodes.h rfconst.h
initacqparms.o: acqparms.h dsp.h lc.h lc_index.h shrexpinfo.h
initauto.o: acodes.h rfconst.h acqparms.h group.h shims.h
initfreqobj.o: group.h variables.h params.h acodes.h rfconst.h oopc.h
initfreqobj.o: acqparms.h chanstruct.h
initfunc.o: oopc.h group.h rfconst.h acqparms.h acodes.h
initobjects.o: group.h variables.h params.h acodes.h rfconst.h oopc.h
initobjects.o: acqparms.h chanstruct.h
initrf.o: oopc.h acodes.h rfconst.h acqparms.h chanstruct.h group.h apdelay.h
init_u_glbl.o: oopc.h acqparms.h
initval.o: acqparms.h
interlktests.o: group.h acodes.h rfconst.h acqparms.h expDoneCodes.h
lc_hdl.o: lc.h acodes.h lc_index.h
lc_index.o: lc_index.h
lk_sh.o: acodes.h acqparms.h
looping.o: acodes.h rfconst.h acqparms.h
math.o: acodes.h rfconst.h acqparms.h
miscfuncs.o: oopc.h acodes.h rfconst.h acqparms.h group.h macros.h
objerror.o: oopc.h objerror.h
Pbox_HT.o: group.h variables.h rfconst.h acqparms.h aptable.h Pbox_psg.h
Pbox_HT.o: Pbox_HT.h
Pbox_psg.o: oopc.h group.h rfconst.h acqparms.h aptable.h apdelay.h macros.h
Pbox_psg.o: Pbox_psg.h vfilesys.h
phaseing.o: oopc.h acodes.h rfconst.h acqparms.h aptable.h macros.h
preacqdelay.o: group.h acodes.h rfconst.h acqparms.h macros.h
pre_exp_seq.o: oopc.h acqparms.h
pre_fid_seq.o: oopc.h acqparms.h
presequence.o: oopc.h acqparms.h
P_receive.o: group.h symtab.h variables.h
psg.o: group.h symtab.h variables.h params.h pvars.h REV_NUMS.h asm.h oopc.h
psg.o: ACQ_SUN.h rfconst.h apdelay.h abort.h vfilesys.h
rcvrfuncs.o: variables.h oopc.h acqparms.h rfconst.h group.h macros.h
rfchanconst.o: chanstruct.h oopc.h rfconst.h acqparms.h
setHSlines.o: acodes.h rfconst.h acqparms.h
sis_misc.o: acodes.h acqparms.h rfconst.h macros.h
sis_initpar.o: vnmrsys.h oopc.h group.h variables.h acqparms.h rfconst.h
sis_initpar.o: macros.h
sis_loop.o: oopc.h acqparms.h rfconst.h macros.h acodes.h lc.h
sis_oblique.o: vnmrsys.h oopc.h acqparms.h rfconst.h macros.h group.h
sis_position.o: oopc.h acqparms.h rfconst.h macros.h
sisrfpatterns.o: oopc.h group.h acodes.h rfconst.h acqparms.h vnmrsys.h
sisrfpatterns.o: macros.h
sli_device.o: ACQ_SUN.h acodes.h acqparms.h macros.h
ssha.o: acodes.h group.h
status.o: group.h rfconst.h acqparms.h
treefuncs.o: group.h symtab.h params.h variables.h
vtfuncs.o: group.h acodes.h rfconst.h acqparms.h expDoneCodes.h
wetfuncs.o: oopc.h acqparms.h rfconst.h macros.h
wg.o: oopc.h group.h acodes.h rfconst.h acqparms.h vnmrsys.h macros.h
wg.o: apdelay.h aptable.h vfilesys.h
xmath.o: REV_NUMS.h group.h variables.h Pbox_psg.h dpsdef.h acqparms.h lc.h
xmath.o: apdelay.h aptable.h
standard.o: oopc.h abort.h acqparms.h rfconst.h aptable.h power.h macros.h
standard.o: apdelay.h group.h wetfuncs.h Pbox_psg.h
device.o: common.p
ap_device.o: device.p common.p
apbit_device.o: ap_device.p device.p common.p
attn_device.o: ap_device.p device.p common.p
event_device.o: device.p common.p
freq_device.o: ap_device.p device.p common.p
rfchan_device.o: device.p common.p
wetfuncs.o: acqparms.h
ap_device.o: acodes.h oopc.h ap_device.p device.p common.p
apbit_device.o: oopc.h apbit_device.p ap_device.p device.p common.p
attn_device.o: acodes.h oopc.h acqparms.h attn_device.p ap_device.p device.p
attn_device.o: common.p
attr_funcs.o: oopc.h acodes.h rfconst.h acqparms.h
attr_valtype.o: oopc.h
delay.o: oopc.h acodes.h acqparms.h macros.h rfconst.h
event_device.o: oopc.h acodes.h rfconst.h event_device.p device.p common.p
freqsweep.o: oopc.h acodes.h acqparms.h macros.h rfconst.h
offset.o: group.h oopc.h acodes.h rfconst.h acqparms.h macros.h
power.o: ACQ_SUN.h group.h acodes.h rfconst.h acqparms.h macros.h power.h
pulses.o: group.h acodes.h oopc.h rfconst.h acqparms.h macros.h apdelay.h
pulses.o: lc.h aptable.h
rfchan_device.o: rfconst.h acodes.h oopc.h acqparms.h aptable.h macros.h
rfchan_device.o: rfchan_device.p device.p common.p freq_device.p ap_device.p
s2pul.o: standard.h oopc.h abort.h acqparms.h rfconst.h aptable.h power.h
s2pul.o: macros.h apdelay.h group.h wetfuncs.h Pbox_psg.h
lintfile.o: oopc.h
