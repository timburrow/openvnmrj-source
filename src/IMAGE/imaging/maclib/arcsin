"macro arcsin"
"****************************************************************************"
"     arcsin: Macro to calculate arcsin of a real number in the range +1.0   "
"             to -1.0. The answer is given in radians and degrees. The first "
"             return value is radians, the second degrees. The displayed     " 
"             can be suppressed with the silent option. The calculation is   "
"             based on the identity:                                         "
"                                                                            "
"                  arcsin(x) = arctan( x/sqrt(1-x*x))                        "
"                                                                            "
"****************************************************************************"


"david foxall: 19th june 1987: interface version #1"
" @(#)arcsin	7.1    7/1/91 "

"[0] Constants and Declarations"
$arcsinestr=' '
$degreestr=' '
$onestr=' '

"[1] Input parameter count"
if $# < 0.5
then
write('error','%s','arcsin: Use arcsin(real number,<"silent">)')
abort
endif

if ($# > 0.5) and ($# < 1.5)
then
$state='notsilent'
endif

if ($# > 1.5) and ($# < 2.5)
then
   if $2='silent'
   then
   $state='silent'
   else
   $state='notsilent'
   write('error','%s','arcsin: Use arcsin(real number,<"silent">)')
   endif
endif

if $# > 2.5
then
write('error','%s','arcsin: Use arcsin(real number,<"silent">)')
abort
endif

"[2] Input Validity trap"
if ($1 > 1.0) or ($1 < -1.0)
then
write('error','%s','arcsin: Argument is out of range (-1 < x < 1)')
abort
endif

"[3] Calculations"
$sin=$1
$cos=sqrt(1.0-$sin*$sin)

if $cos < 0.00000001
then
$cos=0.00000001
endif

$tan=$sin/$cos
arctan($tan,'silent'):$arcsine,$degrees
format($arcsine,6,4):$arcsinestr
format($degrees,7,4):$degreestr
format($1,6,4):$onestr
$outstring='Arcsine of: '+$onestr+'  is  '+$arcsinestr+'  radians'
$outstring=$outstring+'  or  '+$degreestr+' degrees'


"[3] Return to user "
if $state='silent'
then
return($arcsine,$degrees)
else
write('line3','%s',$outstring)
return($arcsine,$degrees)
endif

"************************************THE END**********************************"

