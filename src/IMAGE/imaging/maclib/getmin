"macro getmin"
"********************************************************************
"
"
" NAME:
"    getmin
"
" DESCRIPTION:
"    getmin -- find minimum value of an array
"           -- returns minimum value and its index
"           -- 2nd argument is optional
"           -- minima if: a[i] > a[j] > a[k] < a[l] < a[m]
"
" Ex.: prescan_getmin(a,<start index.):min  with a = 4 8 12 1 9 10
"                                           start index -> start of search
"
" returns  min[1] = 1   -> value
"          min[2] = 4   -> index
"
"********************************************************************
"----------------------------"
" check arguments            "
"----------------------------"
if ($# > 2) then
     write('error','Too many arguments in call to get_min !')
     abort
endif
if ($# < 1) then
     write('error','Insufficient arguments in call to get_min !')
     abort
endif
if ($# < 2) then 
     $start_index = 1					"if arg. 2 is empty default to 1"
else
     $start_index = $2
endif
if (size('$start_index') <> 1) then
     write('error','Second argument in call to get_min is not a scalar !')
     abort
endif     
"------------------------------"
" define & initialize variables"
"------------------------------"
$macro_name   = 'prescan_getmin    '    "name of macro"
$value        = $1			"value"
$size         = size('$value')		"array size"
$counter      = $start_index 		"loop counter"
$min[1]       =  $value[$counter]	"minimum value"
$min[2]       = 0			"position of minimum in array"
$temp_str     = ''			"temporary string variable"
$prescan_flag = 1                      "index for Prescan flag "

if (size('$value') < 2) then
     write('error','First argument in call to getmin is not an array !')
     abort
endif

"------------------------------"
" locate minima                "
"------------------------------"
if (prescan_control[$prescan_flag] <> 0) then
     "--------------------------------------------------"
     " execute for prescan and make sure it is a minima "
     "--------------------------------------------------"
     repeat
	  if ($value[$counter] < $min[1]) then			"Value larger then previous ?"
               if ($counter > 2) and ($counter+2 <= $size) then
        	    if ($value[$counter] < $value[$counter-1]) and ($value[$counter-1] < $value[$counter-2]) then
	        	 if ($value[$counter] < $value[$counter+1]) and ($value[$counter+1] < $value[$counter+2]) then
	 	              $min[1]=$value[$counter]			"Assign new minimum"
                              $min[2]=$counter				"Assign new index"
			 endif
		    endif	   
               endif		   
	  endif
	  $counter=$counter+1					"increment counter"
     until ($counter > $size ) or ($min[2] <> 0)     
else
     repeat
	  if ($value[$counter] < $min[1]) then			"Value larger then previous ?"
               $min[1]=$value[$counter]			        "Assign new minimum"
               $min[2]=$counter				        "Assign new index"
	  endif
	  $counter=$counter+1					"increment counter"
     until ($counter > $size )      
 endif     
"------------------------------"
" check for error              "
"------------------------------"
if (prescan_control[$prescan_flag] <> 0) then
     if ($min[2] = $size) or ($min[2] = 0) then
	 $min[2] = -1					"if minima is last value return -1"
	 "------------------------------"
	 " prepare output and log event "
	 "------------------------------"
	 $message='No minima found ! Start index = ' 
	 format($start_index,0,0):$temp_str
	 $message=$message+$temp_str+', array size = '
	 format($size,0,0):$temp_str
	 $message=$message+$temp_str
	 prescan_log('warning',$macro_name,$message)
     endif 
else
    if ($min[2] = $size) or ($min[2] = 0) then
         $min[2] = -1
	 $message='No minima found ! Start index = ' 
	 format($start_index,0,0):$temp_str
	 $message=$message+$temp_str+', array size = '
	 format($size,0,0):$temp_str
	 $message=$message+$temp_str
         write('line3',$message)  
    endif
endif
"------------------------------"
" return result                "
"------------------------------"   
return($min)

