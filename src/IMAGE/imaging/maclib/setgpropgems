"macro setgpropgems"
/******************************************************************
*  setgpropgems: Set up standard gems sequence to calibrate the
*  gpropdelay parameter for gradient propagation delay
*
*  The optimum value of gpropdelay will be written to the gradtable
*  file for the gradient coil currently selected by gcoil
*
*  This procedure requires that the system be externally triggered.
*  The easiest way to do this is to connect the 60Hz line sync on
*  the back of the system power supply to the External Trigger
*  input
*  
*  To use this setup procedure, first load the standard GEMS
*  protocol, then run setgpropgems.  The initial protocol will be
*  modified.  When the calibration is complete, discard this protocol.
*
*  ARR   Version 1.0   10/11/06 
*******************************************************************/

"-- Check for proper gcoil value --------------------------"
if (gcoil = '') or (gcoil = 'None') or (gcoil = 'none') then
  write('error','Configure gcoil before proceeding')
  return
endif

"-- Check existence of file in gradtables -----------------"
$table = systemdir+'/imaging/gradtables/'+gcoil
exists($table,'file'):$ex1
if $ex1 < 0.5 then
  write('error','%s',$prog+'Cannot locate requested gradtable file')
  return
endif

if ($# = 0) then
  "-- Read gradtables file ----------------------------------"
  edit_sysgcoil('read')

  "-- Measurement uses standard GEMS sequence ---------------"
  if (seqfil <> 'gems') then
    write('error','Load gems protocol before running setgpropgems')
    return  
  endif

  if (ns > 1) then
    write('error','setgpropgems: set number of slices to 1')
    return
  endif

  create('gpropdelay','pulse','current',0)
  create('gxdelay','pulse','current',0)
  create('gydelay','pulse','current',0)
  create('gzdelay','pulse','current',0)
  create('b0delay','pulse','current',0)
  gxdelay = 0 gydelay = 0 gzdelay = 0 b0delay = 0 gpropdelay = 0
  phi = 0 psi = 0 theta = 0

  if ((array <> '') OR (arraydim > 1)) then
    write('error','setgpropgems: one or more parameters are arrayed')
    return
  endif

  wnt = ''
  p1 = 400
  flip1 = 10
  nf = 0
  //profile = 'yy'
  ticks = 1
  tr = 0.5
  ss = 2
  minte = 'y'
  im2D('prep','profile') go('check')
  wexp = 'setgpropgems(\'proc\')'

  "*** set up parallel arrays, order here is critical to build up repeats of gpropdelay for each slice axis ***"
  setarray('gpropdelay',0,5,21)
  gpropdelay = gpropdelay,gpropdelay,gpropdelay
  setarray('r1',0,0,21)                          // temp array of 0s
  setarray('r2',90,0,21)                         // temp array of 90s
  psi = r2,r1,r1                                 // 90,0,0 concatenate blocks of 21 values
  phi = r1,r1,r1                                 // 0,0,0
  theta = r2,r2,r1                               // 90,90,0
  array = '(psi,phi,theta,gpropdelay)'
  au
  write('line3','gradadvance calibration started; make sure external trigger is connected')
endif  "Initialize and start scan"

/*---------------------------------------------------------
* Process and analyze data, update gpropdelay value in gradtables file
* This section is entered with the 'proc' option: setgpropgems('proc')
*---------------------------------------------------------*/
if ($# = 1) then
  if ($1 <> 'proc') then
    write('error','Use setgpropgems(\'proc\') to process')
    abort
  endif

  filter(20)
  wft
  f full
  
  "*** Find tallest profile in the array ***"
  findmaxpeak:$index
  select($index)  vsadj  dssh

  fitmaxpeak(1,21,'gpropdelay'):$xval
  fitmaxpeak(22,42,'gpropdelay'):$yval
  fitmaxpeak(43,63,'gpropdelay'):$zval

  $max = $xval
  if ($yval > $max) then $max = $yval endif
  if ($zval > $max) then $max = $zval endif

  $gpropdelay = $max
  $gxdelay = $gpropdelay - $xval
  $gydelay = $gpropdelay - $yval
  $gzdelay = $gpropdelay - $zval

  "*** Update current gradtable file ***"
  gcoil_params[12] = $gpropdelay
  gcoil_params[13] = $gxdelay
  gcoil_params[14] = $gydelay
  gcoil_params[15] = $gzdelay
  edit_sysgcoil('save')
  phi = 0 psi = 0 theta = 0                      // reset angles
  _gcoil                                         // load updated values from gradtables

  write('line3','gpropdelay=%.1f  gxdelay=%.1f  gydelay=%.1f  gzdelay=%.1f. Load any protocol to continue.',$gpropdelay,$gxdelay,$gydelay,$gzdelay)
endif  "process and analyze"

